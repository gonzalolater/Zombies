{
	"id": "30549608aba50c8553913534eb02882a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/zombiefeeding.sol": {
				"content": "pragma solidity >=0.5.0 <0.6.0;\r\n\r\nimport \"./zombiefactory.sol\";\r\n\r\ncontract KittyInterface {\r\n  function getKitty(uint256 _id) external view returns (\r\n    bool isGestating,\r\n    bool isReady,\r\n    uint256 cooldownIndex,\r\n    uint256 nextActionAt,\r\n    uint256 siringWithId,\r\n    uint256 birthTime,\r\n    uint256 matronId,\r\n    uint256 sireId,\r\n    uint256 generation,\r\n    uint256 genes\r\n  );\r\n}\r\n\r\ncontract ZombieFeeding is ZombieFactory {\r\n\r\n  KittyInterface kittyContract;\r\n\r\n  modifier onlyOwnerOf(uint _zombieId) {\r\n    require(msg.sender == zombieToOwner[_zombieId]);\r\n    _;\r\n  }\r\n\r\n  function setKittyContractAddress(address _address) external onlyOwner {\r\n    kittyContract = KittyInterface(_address);\r\n  }\r\n\r\n  function _triggerCooldown(Zombie storage _zombie) internal {\r\n    _zombie.readyTime = uint32(now + cooldownTime);\r\n  }\r\n\r\n  function _isReady(Zombie storage _zombie) internal view returns (bool) {\r\n      return (_zombie.readyTime <= now);\r\n  }\r\n\r\n  function feedAndMultiply(uint _zombieId, uint _targetDna, string memory _species) internal onlyOwnerOf(_zombieId) {\r\n    Zombie storage myZombie = zombies[_zombieId];\r\n    require(_isReady(myZombie));\r\n    _targetDna = _targetDna % dnaModulus;\r\n    uint newDna = (myZombie.dna + _targetDna) / 2;\r\n    if (keccak256(abi.encodePacked(_species)) == keccak256(abi.encodePacked(\"kitty\"))) {\r\n      newDna = newDna - newDna % 100 + 99;\r\n    }\r\n    _createZombie(\"NoName\", newDna);\r\n    _triggerCooldown(myZombie);\r\n  }\r\n\r\n  function feedOnKitty(uint _zombieId, uint _kittyId) public {\r\n    uint kittyDna;\r\n    (,,,,,,,,,kittyDna) = kittyContract.getKitty(_kittyId);\r\n    feedAndMultiply(_zombieId, kittyDna, \"kitty\");\r\n  }\r\n}\r\n"
			},
			"contracts/zombiefactory.sol": {
				"content": "pragma solidity >=0.5.0 <0.6.0;\r\n\r\nimport \"./ownable.sol\";\r\nimport \"./safemath.sol\";\r\n\r\ncontract ZombieFactory is Ownable {\r\n\r\n  using SafeMath for uint256;\r\n  using SafeMath32 for uint32;\r\n  using SafeMath16 for uint16;\r\n\r\n  event NewZombie(uint zombieId, string name, uint dna);\r\n\r\n  uint dnaDigits = 16;\r\n  uint dnaModulus = 10 ** dnaDigits;\r\n  uint cooldownTime = 1 days;\r\n\r\n  struct Zombie {\r\n    string name;\r\n    uint dna;\r\n    uint32 level;\r\n    uint32 readyTime;\r\n    uint16 winCount;\r\n    uint16 lossCount;\r\n  }\r\n\r\n  Zombie[] public zombies;\r\n\r\n  mapping (uint => address) public zombieToOwner;\r\n  mapping (address => uint) ownerZombieCount;\r\n\r\n  function _createZombie(string memory _name, uint _dna) internal {\r\n    uint id = zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) - 1;\r\n    zombieToOwner[id] = msg.sender;\r\n    ownerZombieCount[msg.sender] = ownerZombieCount[msg.sender].add(1);\r\n    emit NewZombie(id, _name, _dna);\r\n  }\r\n\r\n  function _generateRandomDna(string memory _str) private view returns (uint) {\r\n    uint rand = uint(keccak256(abi.encodePacked(_str)));\r\n    return rand % dnaModulus;\r\n  }\r\n\r\n  function createRandomZombie(string memory _name) public {\r\n    require(ownerZombieCount[msg.sender] == 0);\r\n    uint randDna = _generateRandomDna(_name);\r\n    randDna = randDna - randDna % 100;\r\n    _createZombie(_name, randDna);\r\n  }\r\n\r\n}\r\n"
			},
			"contracts/safemath.sol": {
				"content": "pragma solidity >=0.5.0 <0.6.0;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title SafeMath32\r\n * @dev SafeMath library implemented for uint32\r\n */\r\nlibrary SafeMath32 {\r\n\r\n  function mul(uint32 a, uint32 b) internal pure returns (uint32) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint32 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint32 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint32 a, uint32 b) internal pure returns (uint32) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint32 a, uint32 b) internal pure returns (uint32) {\r\n    uint32 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title SafeMath16\r\n * @dev SafeMath library implemented for uint16\r\n */\r\nlibrary SafeMath16 {\r\n\r\n  function mul(uint16 a, uint16 b) internal pure returns (uint16) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint16 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint16 a, uint16 b) internal pure returns (uint16) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint16 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint16 a, uint16 b) internal pure returns (uint16) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint16 a, uint16 b) internal pure returns (uint16) {\r\n    uint16 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n"
			},
			"contracts/ownable.sol": {
				"content": "pragma solidity >=0.5.0 <0.6.0;\r\n\r\n/**\r\n* @title Ownable\r\n* @dev The Ownable contract has an owner address, and provides basic authorization control\r\n* functions, this simplifies the implementation of \"user permissions\".\r\n*/\r\ncontract Ownable {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n  /**\r\n  * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n  * account.\r\n  */\r\n  constructor() internal {\r\n    _owner = msg.sender;\r\n    emit OwnershipTransferred(address(0), _owner);\r\n  }\r\n\r\n  /**\r\n  * @return the address of the owner.\r\n  */\r\n  function owner() public view returns(address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n  * @dev Throws if called by any account other than the owner.\r\n  */\r\n  modifier onlyOwner() {\r\n    require(isOwner());\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * @return true if `msg.sender` is the owner of the contract.\r\n  */\r\n  function isOwner() public view returns(bool) {\r\n    return msg.sender == _owner;\r\n  }\r\n\r\n  /**\r\n  * @dev Allows the current owner to relinquish control of the contract.\r\n  * @notice Renouncing to ownership will leave the contract without an owner.\r\n  * It will not be possible to call the functions with the `onlyOwner`\r\n  * modifier anymore.\r\n  */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n  * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n  * @param newOwner The address to transfer ownership to.\r\n  */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n  * @dev Transfers control of the contract to a newOwner.\r\n  * @param newOwner The address to transfer ownership to.\r\n  */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \"user permissions\".",
						"methods": {
							"constructor": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
							},
							"isOwner()": {
								"return": "true if `msg.sender` is the owner of the contract."
							},
							"owner()": {
								"return": "the address of the owner."
							},
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \\\"user permissions\\\".\",\"methods\":{\"constructor\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable.sol\":{\"keccak256\":\"0x33f9862afb90391d02eed330569a92bc9143dd1cb5d6661d737bcedb22f24c68\",\"urls\":[\"bzz-raw://e8f11612996616032f44968b1850c1e71a94a368094141a23f229f2c1a260990\",\"dweb:/ipfs/QmXaxow6LX1FHFKXvMHbKrSn12csP81Fegmbu8HvhUd6MB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			},
			"contracts/safemath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/safemath.sol\":129:1190  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/safemath.sol\":129:1190  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820c3f0093da76006ff3549e64aa441c7e3a0cfec80510b1d1d2e57b8a107af2bb664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c3f0093da76006ff3549e64aa441c7e3a0cfec80510b1d1d2e57b8a107af2bb664736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC3 CREATE MULMOD RETURNDATASIZE 0xA7 PUSH1 0x6 SELFDESTRUCT CALLDATALOAD 0x49 0xE6 0x4A LOG4 COINBASE 0xC7 0xE3 LOG0 0xCF 0xEC DUP1 MLOAD SIGNEXTEND SAR SAR 0x2E JUMPI 0xB8 LOG1 SMOD 0xAF 0x2B 0xB6 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "129:1061:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c3f0093da76006ff3549e64aa441c7e3a0cfec80510b1d1d2e57b8a107af2bb664736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC3 CREATE MULMOD RETURNDATASIZE 0xA7 PUSH1 0x6 SELFDESTRUCT CALLDATALOAD 0x49 0xE6 0x4A LOG4 COINBASE 0xC7 0xE3 LOG0 0xCF 0xEC DUP1 MLOAD SIGNEXTEND SAR SAR 0x2E JUMPI 0xB8 LOG1 SMOD 0xAF 0x2B 0xB6 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "129:1061:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 1190,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 1190,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c3f0093da76006ff3549e64aa441c7e3a0cfec80510b1d1d2e57b8a107af2bb664736f6c63430005110032",
									".code": [
										{
											"begin": 129,
											"end": 1190,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 129,
											"end": 1190,
											"name": "ADDRESS"
										},
										{
											"begin": 129,
											"end": 1190,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 1190,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 129,
											"end": 1190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 129,
											"end": 1190,
											"name": "MSTORE"
										},
										{
											"begin": 129,
											"end": 1190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 1190,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 1190,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/safemath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/safemath.sol\":{\"keccak256\":\"0x550edc31dffbfc4cc03a0782be2a00d21fb46c4c7701e7ad94119b2958df3141\",\"urls\":[\"bzz-raw://c83e2808dc5f0270c500b3d6778501864e2aa6ea544d945f5261a17ac332c1bb\",\"dweb:/ipfs/QmaPhmn7YRdF9pvmbGUr2sg9mvWMkxpid4fZDb66hNdvGm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath16": {
					"abi": [],
					"devdoc": {
						"details": "SafeMath library implemented for uint16",
						"methods": {},
						"title": "SafeMath16"
					},
					"evm": {
						"assembly": "    /* \"contracts/safemath.sol\":2088:2816  library SafeMath16 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/safemath.sol\":2088:2816  library SafeMath16 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820eae5433ad252af092321a74c5b8c5a08c1df3f5ddc0f3bebc0994b2099a89e8264736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820eae5433ad252af092321a74c5b8c5a08c1df3f5ddc0f3bebc0994b2099a89e8264736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEA 0xE5 NUMBER GASPRICE 0xD2 MSTORE 0xAF MULMOD 0x23 0x21 0xA7 0x4C JUMPDEST DUP13 GAS ADDMOD 0xC1 0xDF EXTCODEHASH 0x5D 0xDC 0xF EXTCODESIZE 0xEB 0xC0 SWAP10 0x4B KECCAK256 SWAP10 0xA8 SWAP15 DUP3 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "2088:728:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820eae5433ad252af092321a74c5b8c5a08c1df3f5ddc0f3bebc0994b2099a89e8264736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEA 0xE5 NUMBER GASPRICE 0xD2 MSTORE 0xAF MULMOD 0x23 0x21 0xA7 0x4C JUMPDEST DUP13 GAS ADDMOD 0xC1 0xDF EXTCODEHASH 0x5D 0xDC 0xF EXTCODESIZE 0xEB 0xC0 SWAP10 0x4B KECCAK256 SWAP10 0xA8 SWAP15 DUP3 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "2088:728:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint16,uint16)": "infinite",
								"div(uint16,uint16)": "infinite",
								"mul(uint16,uint16)": "infinite",
								"sub(uint16,uint16)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2088,
									"end": 2816,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2088,
									"end": 2816,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820eae5433ad252af092321a74c5b8c5a08c1df3f5ddc0f3bebc0994b2099a89e8264736f6c63430005110032",
									".code": [
										{
											"begin": 2088,
											"end": 2816,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 2088,
											"end": 2816,
											"name": "ADDRESS"
										},
										{
											"begin": 2088,
											"end": 2816,
											"name": "EQ"
										},
										{
											"begin": 2088,
											"end": 2816,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2088,
											"end": 2816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2816,
											"name": "MSTORE"
										},
										{
											"begin": 2088,
											"end": 2816,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2816,
											"name": "DUP1"
										},
										{
											"begin": 2088,
											"end": 2816,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"SafeMath library implemented for uint16\",\"methods\":{},\"title\":\"SafeMath16\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/safemath.sol\":\"SafeMath16\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/safemath.sol\":{\"keccak256\":\"0x550edc31dffbfc4cc03a0782be2a00d21fb46c4c7701e7ad94119b2958df3141\",\"urls\":[\"bzz-raw://c83e2808dc5f0270c500b3d6778501864e2aa6ea544d945f5261a17ac332c1bb\",\"dweb:/ipfs/QmaPhmn7YRdF9pvmbGUr2sg9mvWMkxpid4fZDb66hNdvGm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath32": {
					"abi": [],
					"devdoc": {
						"details": "SafeMath library implemented for uint32",
						"methods": {},
						"title": "SafeMath32"
					},
					"evm": {
						"assembly": "    /* \"contracts/safemath.sol\":1275:2003  library SafeMath32 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/safemath.sol\":1275:2003  library SafeMath32 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820c5dc7ed81964672d07f35ffe7b37b084273f96ab0328ea353de36e9b26f7c00864736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c5dc7ed81964672d07f35ffe7b37b084273f96ab0328ea353de36e9b26f7c00864736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC5 0xDC PUSH31 0xD81964672D07F35FFE7B37B084273F96AB0328EA353DE36E9B26F7C0086473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "1275:728:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c5dc7ed81964672d07f35ffe7b37b084273f96ab0328ea353de36e9b26f7c00864736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC5 0xDC PUSH31 0xD81964672D07F35FFE7B37B084273F96AB0328EA353DE36E9B26F7C0086473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "1275:728:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint32,uint32)": "infinite",
								"div(uint32,uint32)": "infinite",
								"mul(uint32,uint32)": "infinite",
								"sub(uint32,uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1275,
									"end": 2003,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1275,
									"end": 2003,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c5dc7ed81964672d07f35ffe7b37b084273f96ab0328ea353de36e9b26f7c00864736f6c63430005110032",
									".code": [
										{
											"begin": 1275,
											"end": 2003,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 1275,
											"end": 2003,
											"name": "ADDRESS"
										},
										{
											"begin": 1275,
											"end": 2003,
											"name": "EQ"
										},
										{
											"begin": 1275,
											"end": 2003,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1275,
											"end": 2003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 2003,
											"name": "MSTORE"
										},
										{
											"begin": 1275,
											"end": 2003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 2003,
											"name": "DUP1"
										},
										{
											"begin": 1275,
											"end": 2003,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"SafeMath library implemented for uint32\",\"methods\":{},\"title\":\"SafeMath32\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/safemath.sol\":\"SafeMath32\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/safemath.sol\":{\"keccak256\":\"0x550edc31dffbfc4cc03a0782be2a00d21fb46c4c7701e7ad94119b2958df3141\",\"urls\":[\"bzz-raw://c83e2808dc5f0270c500b3d6778501864e2aa6ea544d945f5261a17ac332c1bb\",\"dweb:/ipfs/QmaPhmn7YRdF9pvmbGUr2sg9mvWMkxpid4fZDb66hNdvGm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/zombiefactory.sol": {
				"ZombieFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "zombieId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								}
							],
							"name": "NewZombie",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "createRandomZombie",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombieToOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombies",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "level",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "readyTime",
									"type": "uint32"
								},
								{
									"internalType": "uint16",
									"name": "winCount",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "lossCount",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"return": "true if `msg.sender` is the owner of the contract."
							},
							"owner()": {
								"return": "the address of the owner."
							},
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/zombiefactory.sol\":88:1388  contract ZombieFactory is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/zombiefactory.sol\":303:305  16 */\n  0x10\n    /* \"contracts/zombiefactory.sol\":286:305  uint dnaDigits = 16 */\n  0x01\n  sstore\n    /* \"contracts/zombiefactory.sol\":334:343  dnaDigits */\n  sload(0x01)\n    /* \"contracts/zombiefactory.sol\":328:330  10 */\n  0x0a\n    /* \"contracts/zombiefactory.sol\":328:343  10 ** dnaDigits */\n  exp\n    /* \"contracts/zombiefactory.sol\":310:343  uint dnaModulus = 10 ** dnaDigits */\n  0x02\n  sstore\n    /* \"contracts/zombiefactory.sol\":368:374  1 days */\n  0x015180\n    /* \"contracts/zombiefactory.sol\":348:374  uint cooldownTime = 1 days */\n  0x03\n  sstore\n    /* \"contracts/ownable.sol\":538:548  msg.sender */\n  caller\n    /* \"contracts/ownable.sol\":529:535  _owner */\n  0x00\n  dup1\n    /* \"contracts/ownable.sol\":529:548  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ownable.sol\":593:599  _owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownable.sol\":560:600  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownable.sol\":589:590  0 */\n  0x00\n    /* \"contracts/ownable.sol\":560:600  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/zombiefactory.sol\":88:1388  contract ZombieFactory is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/zombiefactory.sol\":88:1388  contract ZombieFactory is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/zombiefactory.sol\":88:1388  contract ZombieFactory is Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7bff0a01\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x7bff0a01\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2052465e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x528b7b8f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/zombiefactory.sol\":527:550  Zombie[] public zombies */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"contracts/zombiefactory.sol\":527:550  Zombie[] public zombies */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup9\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_14:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_14)\n    tag_16:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/zombiefactory.sol\":527:550  Zombie[] public zombies */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_17:\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/zombiefactory.sol\":557:603  mapping (uint => address) public zombieToOwner */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"contracts/zombiefactory.sol\":557:603  mapping (uint => address) public zombieToOwner */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":1314:1444  function renounceOwnership() public onlyOwner {\r... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_27:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/ownable.sol\":664:736  function owner() public view returns(address) {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":962:1047  function isOwner() public view returns(bool) {\r... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":1608:1711  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/ownable.sol\":1608:1711  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/zombiefactory.sol\":527:550  Zombie[] public zombies */\n    tag_13:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_39\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_38)\n    tag_39:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_40:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_40\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x0a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":557:603  mapping (uint => address) public zombieToOwner */\n    tag_20:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ownable.sol\":1314:1444  function renounceOwnership() public onlyOwner {\r... */\n    tag_22:\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      tag_42\n        /* \"contracts/ownable.sol\":855:862  isOwner */\n      tag_32\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      jump\t// in\n    tag_42:\n        /* \"contracts/ownable.sol\":847:865  require(isOwner()) */\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n        /* \"contracts/ownable.sol\":1409:1410  0 */\n      0x00\n        /* \"contracts/ownable.sol\":1372:1412  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1393:1399  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1372:1412  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownable.sol\":1436:1437  0 */\n      0x00\n        /* \"contracts/ownable.sol\":1419:1425  _owner */\n      dup1\n      0x00\n        /* \"contracts/ownable.sol\":1419:1438  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable.sol\":1314:1444  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n    tag_28:\n        /* \"contracts/zombiefactory.sol\":1252:1253  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1220:1236  ownerZombieCount */\n      0x06\n        /* \"contracts/zombiefactory.sol\":1220:1248  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1237:1247  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":1220:1248  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/zombiefactory.sol\":1220:1253  ownerZombieCount[msg.sender] == 0 */\n      eq\n        /* \"contracts/zombiefactory.sol\":1212:1254  require(ownerZombieCount[msg.sender] == 0) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"contracts/zombiefactory.sol\":1261:1273  uint randDna */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1276:1301  _generateRandomDna(_name) */\n      tag_47\n        /* \"contracts/zombiefactory.sol\":1295:1300  _name */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1276:1294  _generateRandomDna */\n      tag_48\n        /* \"contracts/zombiefactory.sol\":1276:1301  _generateRandomDna(_name) */\n      jump\t// in\n    tag_47:\n        /* \"contracts/zombiefactory.sol\":1261:1301  uint randDna = _generateRandomDna(_name) */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1338:1341  100 */\n      0x64\n        /* \"contracts/zombiefactory.sol\":1328:1335  randDna */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1328:1341  randDna % 100 */\n      dup2\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n      mod\n        /* \"contracts/zombiefactory.sol\":1318:1325  randDna */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1318:1341  randDna - randDna % 100 */\n      sub\n        /* \"contracts/zombiefactory.sol\":1308:1341  randDna = randDna - randDna % 100 */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1348:1377  _createZombie(_name, randDna) */\n      tag_50\n        /* \"contracts/zombiefactory.sol\":1362:1367  _name */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1369:1376  randDna */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1348:1361  _createZombie */\n      tag_51\n        /* \"contracts/zombiefactory.sol\":1348:1377  _createZombie(_name, randDna) */\n      jump\t// in\n    tag_50:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ownable.sol\":664:736  function owner() public view returns(address) {\r... */\n    tag_30:\n        /* \"contracts/ownable.sol\":701:708  address */\n      0x00\n        /* \"contracts/ownable.sol\":724:730  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":717:730  return _owner */\n      swap1\n      pop\n        /* \"contracts/ownable.sol\":664:736  function owner() public view returns(address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownable.sol\":962:1047  function isOwner() public view returns(bool) {\r... */\n    tag_32:\n        /* \"contracts/ownable.sol\":1001:1005  bool */\n      0x00\n        /* \"contracts/ownable.sol\":1035:1041  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1021:1041  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1021:1031  msg.sender */\n      caller\n        /* \"contracts/ownable.sol\":1021:1041  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownable.sol\":1014:1041  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/ownable.sol\":962:1047  function isOwner() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownable.sol\":1608:1711  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_35:\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      tag_55\n        /* \"contracts/ownable.sol\":855:862  isOwner */\n      tag_32\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      jump\t// in\n    tag_55:\n        /* \"contracts/ownable.sol\":847:865  require(isOwner()) */\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n        /* \"contracts/ownable.sol\":1677:1705  _transferOwnership(newOwner) */\n      tag_58\n        /* \"contracts/ownable.sol\":1696:1704  newOwner */\n      dup2\n        /* \"contracts/ownable.sol\":1677:1695  _transferOwnership */\n      tag_59\n        /* \"contracts/ownable.sol\":1677:1705  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_58:\n        /* \"contracts/ownable.sol\":1608:1711  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":972:1143  function _generateRandomDna(string memory _str) private view returns (uint) {\r... */\n    tag_48:\n        /* \"contracts/zombiefactory.sol\":1042:1046  uint */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1055:1064  uint rand */\n      dup1\n        /* \"contracts/zombiefactory.sol\":1099:1103  _str */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1082:1104  abi.encodePacked(_str) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_61:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_61)\n    tag_63:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":1082:1104  abi.encodePacked(_str) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/zombiefactory.sol\":1082:1104  abi.encodePacked(_str) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/zombiefactory.sol\":1072:1105  keccak256(abi.encodePacked(_str)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/zombiefactory.sol\":1067:1106  uint(keccak256(abi.encodePacked(_str))) */\n      0x00\n      shr\n        /* \"contracts/zombiefactory.sol\":1055:1106  uint rand = uint(keccak256(abi.encodePacked(_str))) */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1127:1137  dnaModulus */\n      sload(0x02)\n        /* \"contracts/zombiefactory.sol\":1120:1124  rand */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1120:1137  rand % dnaModulus */\n      dup2\n      tag_64\n      jumpi\n      invalid\n    tag_64:\n      mod\n        /* \"contracts/zombiefactory.sol\":1113:1137  return rand % dnaModulus */\n      swap2\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":972:1143  function _generateRandomDna(string memory _str) private view returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":657:966  function _createZombie(string memory _name, uint _dna) internal {\r... */\n    tag_51:\n        /* \"contracts/zombiefactory.sol\":728:735  uint id */\n      0x00\n        /* \"contracts/zombiefactory.sol\":811:812  1 */\n      0x01\n        /* \"contracts/zombiefactory.sol\":738:745  zombies */\n      0x04\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/zombiefactory.sol\":758:763  _name */\n      dup7\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":765:769  _dna */\n      dup6\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":771:772  1 */\n      0x01\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":787:799  cooldownTime */\n      sload(0x03)\n        /* \"contracts/zombiefactory.sol\":781:784  now */\n      timestamp\n        /* \"contracts/zombiefactory.sol\":781:799  now + cooldownTime */\n      add\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":802:803  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":805:806  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/zombiefactory.sol\":738:808  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/zombiefactory.sol\":738:808  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x04)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x0a)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":738:812  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) - 1 */\n      sub\n        /* \"contracts/zombiefactory.sol\":728:812  uint id = zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) - 1 */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":839:849  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":819:832  zombieToOwner */\n      0x05\n        /* \"contracts/zombiefactory.sol\":819:836  zombieToOwner[id] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":833:835  id */\n      dup4\n        /* \"contracts/zombiefactory.sol\":819:836  zombieToOwner[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/zombiefactory.sol\":819:849  zombieToOwner[id] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefactory.sol\":887:922  ownerZombieCount[msg.sender].add(1) */\n      tag_69\n        /* \"contracts/zombiefactory.sol\":920:921  1 */\n      0x01\n        /* \"contracts/zombiefactory.sol\":887:903  ownerZombieCount */\n      0x06\n        /* \"contracts/zombiefactory.sol\":887:915  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":904:914  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":887:915  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/zombiefactory.sol\":887:919  ownerZombieCount[msg.sender].add */\n      tag_70\n      swap1\n        /* \"contracts/zombiefactory.sol\":887:922  ownerZombieCount[msg.sender].add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"contracts/zombiefactory.sol\":856:872  ownerZombieCount */\n      0x06\n        /* \"contracts/zombiefactory.sol\":856:884  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":873:883  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":856:884  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/zombiefactory.sol\":856:922  ownerZombieCount[msg.sender] = ownerZombieCount[msg.sender].add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefactory.sol\":934:960  NewZombie(id, _name, _dna) */\n      0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7\n        /* \"contracts/zombiefactory.sol\":944:946  id */\n      dup2\n        /* \"contracts/zombiefactory.sol\":948:953  _name */\n      dup5\n        /* \"contracts/zombiefactory.sol\":955:959  _dna */\n      dup5\n        /* \"contracts/zombiefactory.sol\":934:960  NewZombie(id, _name, _dna) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_71:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_71)\n    tag_73:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/zombiefactory.sol\":934:960  NewZombie(id, _name, _dna) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_74:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/zombiefactory.sol\":657:966  function _createZombie(string memory _name, uint _dna) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ownable.sol\":1848:2021  function _transferOwnership(address newOwner) internal {\r... */\n    tag_59:\n        /* \"contracts/ownable.sol\":1938:1939  0 */\n      0x00\n        /* \"contracts/ownable.sol\":1918:1940  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1918:1926  newOwner */\n      dup2\n        /* \"contracts/ownable.sol\":1918:1940  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ownable.sol\":1910:1941  require(newOwner != address(0)) */\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n        /* \"contracts/ownable.sol\":1982:1990  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":1953:1991  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1974:1980  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1953:1991  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownable.sol\":2007:2015  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":1998:2004  _owner */\n      0x00\n      dup1\n        /* \"contracts/ownable.sol\":1998:2015  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable.sol\":1848:2021  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/safemath.sol\":1054:1187  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_70:\n        /* \"contracts/safemath.sol\":1112:1119  uint256 */\n      0x00\n        /* \"contracts/safemath.sol\":1128:1137  uint256 c */\n      dup1\n        /* \"contracts/safemath.sol\":1144:1145  b */\n      dup3\n        /* \"contracts/safemath.sol\":1140:1141  a */\n      dup5\n        /* \"contracts/safemath.sol\":1140:1145  a + b */\n      add\n        /* \"contracts/safemath.sol\":1128:1145  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/safemath.sol\":1164:1165  a */\n      dup4\n        /* \"contracts/safemath.sol\":1159:1160  c */\n      dup2\n        /* \"contracts/safemath.sol\":1159:1165  c >= a */\n      lt\n      iszero\n        /* \"contracts/safemath.sol\":1152:1166  assert(c >= a) */\n      tag_78\n      jumpi\n      invalid\n    tag_78:\n        /* \"contracts/safemath.sol\":1180:1181  c */\n      dup1\n        /* \"contracts/safemath.sol\":1173:1181  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/safemath.sol\":1054:1187  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":88:1388  contract ZombieFactory is Ownable {\r... */\n    tag_68:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_80\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_79)\n    tag_80:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_79\n      jumpi\n      swap2\n      dup3\n      add\n    tag_81:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_82\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_81)\n    tag_82:\n    tag_79:\n      pop\n      swap1\n      pop\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      pop\n      swap1\n      jump\t// out\n    tag_84:\n      tag_85\n      swap2\n      swap1\n    tag_86:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_86)\n    tag_87:\n      pop\n      swap1\n      jump\n    tag_85:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158203698841d7b48a25bfa7427e53b6627e9b33525db037edddbb51ec55367adfaf864736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526010600155600154600a0a60025562015180600355336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610bd8806100e46000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bff0a011161005b5780637bff0a01146101ec5780638da5cb5b146102a75780638f32d59b146102f1578063f2fde38b146103135761007d565b80632052465e14610082578063528b7b8f14610174578063715018a6146101e2575b600080fd5b6100ae6004803603602081101561009857600080fd5b8101908080359060200190929190505050610357565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6101a06004803603602081101561018a57600080fd5b8101908080359060200190929190505050610474565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ea6104a7565b005b6102a56004803603602081101561020257600080fd5b810190808035906020019064010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184600183028401116401000000008311171561025357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610577565b005b6102af6105ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102f9610616565b604051808215151515815260200191505060405180910390f35b6103556004803603602081101561032957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066d565b005b6004818154811061036457fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104af610616565b6104b857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146105c357600080fd5b60006105ce8261068a565b9050606481816105da57fe5b06810390506105e98282610718565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610675610616565b61067e57600080fd5b610687816109ea565b50565b600080826040516020018082805190602001908083835b602083106106c457805182526020820191506020810190506020830392506106a1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161070f57fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906107ad929190610afe565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108f66001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae290919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156109a957808201518184015260208101905061098e565b50505050905090810190601f1680156109d65780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a2457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015610af457fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b3f57805160ff1916838001178555610b6d565b82800160010185558215610b6d579182015b82811115610b6c578251825591602001919060010190610b51565b5b509050610b7a9190610b7e565b5090565b610ba091905b80821115610b9c576000816000905550600101610b84565b5090565b9056fea265627a7a723158203698841d7b48a25bfa7427e53b6627e9b33525db037edddbb51ec55367adfaf864736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x10 PUSH1 0x1 SSTORE PUSH1 0x1 SLOAD PUSH1 0xA EXP PUSH1 0x2 SSTORE PUSH3 0x15180 PUSH1 0x3 SSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBD8 DUP1 PUSH2 0xE4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BFF0A01 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x313 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2052465E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x364 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x410 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x410 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x616 JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP3 PUSH2 0x68A JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP2 PUSH2 0x5DA JUMPI INVALID JUMPDEST MOD DUP2 SUB SWAP1 POP PUSH2 0x5E9 DUP3 DUP3 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x675 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x687 DUP2 PUSH2 0x9EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x6C4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 PUSH2 0x70F JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 SLOAD TIMESTAMP ADD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7AD SWAP3 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP SUB SWAP1 POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8F6 PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9A9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x98E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9D6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAF4 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xB3F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB6D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB6D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB6C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB51 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB7A SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xBA0 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB84 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLDATASIZE SWAP9 DUP5 SAR PUSH28 0x48A25BFA7427E53B6627E9B33525DB037EDDDBB51EC55367ADFAF864 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "88:1300:2:-;;;303:2;286:19;;334:9;;328:2;:15;310:33;;368:6;348:26;;538:10:0;529:6;;:19;;;;;;;;;;;;;;;;;;593:6;;;;;;;;;;;560:40;;589:1;560:40;;;;;;;;;;;;88:1300:2;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bff0a011161005b5780637bff0a01146101ec5780638da5cb5b146102a75780638f32d59b146102f1578063f2fde38b146103135761007d565b80632052465e14610082578063528b7b8f14610174578063715018a6146101e2575b600080fd5b6100ae6004803603602081101561009857600080fd5b8101908080359060200190929190505050610357565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6101a06004803603602081101561018a57600080fd5b8101908080359060200190929190505050610474565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ea6104a7565b005b6102a56004803603602081101561020257600080fd5b810190808035906020019064010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184600183028401116401000000008311171561025357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610577565b005b6102af6105ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102f9610616565b604051808215151515815260200191505060405180910390f35b6103556004803603602081101561032957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066d565b005b6004818154811061036457fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104af610616565b6104b857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146105c357600080fd5b60006105ce8261068a565b9050606481816105da57fe5b06810390506105e98282610718565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610675610616565b61067e57600080fd5b610687816109ea565b50565b600080826040516020018082805190602001908083835b602083106106c457805182526020820191506020810190506020830392506106a1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161070f57fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906107ad929190610afe565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108f66001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae290919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156109a957808201518184015260208101905061098e565b50505050905090810190601f1680156109d65780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a2457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015610af457fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b3f57805160ff1916838001178555610b6d565b82800160010185558215610b6d579182015b82811115610b6c578251825591602001919060010190610b51565b5b509050610b7a9190610b7e565b5090565b610ba091905b80821115610b9c576000816000905550600101610b84565b5090565b9056fea265627a7a723158203698841d7b48a25bfa7427e53b6627e9b33525db037edddbb51ec55367adfaf864736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BFF0A01 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x313 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2052465E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x364 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x410 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x410 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x616 JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP3 PUSH2 0x68A JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP2 PUSH2 0x5DA JUMPI INVALID JUMPDEST MOD DUP2 SUB SWAP1 POP PUSH2 0x5E9 DUP3 DUP3 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x675 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x687 DUP2 PUSH2 0x9EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x6C4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 PUSH2 0x70F JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 SLOAD TIMESTAMP ADD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7AD SWAP3 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP SUB SWAP1 POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8F6 PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9A9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x98E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9D6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAF4 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xB3F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB6D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB6D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB6C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB51 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB7A SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xBA0 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB84 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLDATASIZE SWAP9 DUP5 SAR PUSH28 0x48A25BFA7427E53B6627E9B33525DB037EDDDBB51EC55367ADFAF864 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "88:1300:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:1300:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;527:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;527:23:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;527:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;557:46:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1314:130:0;;;:::i;:::-;;1149:234:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1149:234:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1149:234:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1149:234:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1149:234:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1149:234:2;;;;;;;;;;;;;;;:::i;:::-;;664:72:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;962:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1608:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1608:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;527:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;557:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;1314:130:0:-;855:9;:7;:9::i;:::-;847:18;;;;;;1409:1;1372:40;;1393:6;;;;;;;;;;;1372:40;;;;;;;;;;;;1436:1;1419:6;;:19;;;;;;;;;;;;;;;;;;1314:130::o;1149:234:2:-;1252:1;1220:16;:28;1237:10;1220:28;;;;;;;;;;;;;;;;:33;1212:42;;;;;;1261:12;1276:25;1295:5;1276:18;:25::i;:::-;1261:40;;1338:3;1328:7;:13;;;;;;1318:7;:23;1308:33;;1348:29;1362:5;1369:7;1348:13;:29::i;:::-;1149:234;;:::o;664:72:0:-;701:7;724:6;;;;;;;;;;;717:13;;664:72;:::o;962:85::-;1001:4;1035:6;;;;;;;;;;;1021:20;;:10;:20;;;1014:27;;962:85;:::o;1608:103::-;855:9;:7;:9::i;:::-;847:18;;;;;;1677:28;1696:8;1677:18;:28::i;:::-;1608:103;:::o;972:171:2:-;1042:4;1055:9;1099:4;1082:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1082:22:2;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1082:22:2;;;1072:33;;;;;;1067:39;;1055:51;;1127:10;;1120:4;:17;;;;;;1113:24;;;972:171;;;:::o;657:309::-;728:7;811:1;738:7;751:56;;;;;;;;758:5;751:56;;;;765:4;751:56;;;;771:1;751:56;;;;;;787:12;;781:3;:18;751:56;;;;;;802:1;751:56;;;;;;805:1;751:56;;;;;738:70;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;738:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:74;728:84;;839:10;819:13;:17;833:2;819:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;887:35;920:1;887:16;:28;904:10;887:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;856:16;:28;873:10;856:28;;;;;;;;;;;;;;;:66;;;;934:26;944:2;948:5;955:4;934:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;934:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:309;;;:::o;1848:173:0:-;1938:1;1918:22;;:8;:22;;;;1910:31;;;;;;1982:8;1953:38;;1974:6;;;;;;;;;;;1953:38;;;;;;;;;;;;2007:8;1998:6;;:17;;;;;;;;;;;;;;;;;;1848:173;:::o;1054:133:1:-;1112:7;1128:9;1144:1;1140;:5;1128:17;;1164:1;1159;:6;;1152:14;;;;1180:1;1173:8;;;1054:133;;;;:::o;88:1300:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "606400",
								"executionCost": "84742",
								"totalCost": "691142"
							},
							"external": {
								"createRandomZombie(string)": "infinite",
								"isOwner()": "1122",
								"owner()": "1083",
								"renounceOwnership()": "24342",
								"transferOwnership(address)": "24520",
								"zombieToOwner(uint256)": "1223",
								"zombies(uint256)": "infinite"
							},
							"internal": {
								"_createZombie(string memory,uint256)": "infinite",
								"_generateRandomDna(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 1388,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "MSTORE"
								},
								{
									"begin": 303,
									"end": 305,
									"name": "PUSH",
									"value": "10"
								},
								{
									"begin": 286,
									"end": 305,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 286,
									"end": 305,
									"name": "SSTORE"
								},
								{
									"begin": 334,
									"end": 343,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 334,
									"end": 343,
									"name": "SLOAD"
								},
								{
									"begin": 328,
									"end": 330,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 328,
									"end": 343,
									"name": "EXP"
								},
								{
									"begin": 310,
									"end": 343,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 310,
									"end": 343,
									"name": "SSTORE"
								},
								{
									"begin": 368,
									"end": 374,
									"name": "PUSH",
									"value": "15180"
								},
								{
									"begin": 348,
									"end": 374,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 348,
									"end": 374,
									"name": "SSTORE"
								},
								{
									"begin": 538,
									"end": 548,
									"name": "CALLER"
								},
								{
									"begin": 529,
									"end": 535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 529,
									"end": 535,
									"name": "DUP1"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "EXP"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "DUP2"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "SLOAD"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "DUP2"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "MUL"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "NOT"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "AND"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "SWAP1"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "DUP4"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "AND"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "MUL"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "OR"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "SWAP1"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "SSTORE"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "POP"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SWAP1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SLOAD"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SWAP1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "EXP"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SWAP1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DIV"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "AND"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "AND"
								},
								{
									"begin": 589,
									"end": 590,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "AND"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "MLOAD"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "MLOAD"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "DUP1"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "SWAP2"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "SUB"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "SWAP1"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "LOG3"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "DUP1"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "CODECOPY"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 88,
									"end": 1388,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203698841d7b48a25bfa7427e53b6627e9b33525db037edddbb51ec55367adfaf864736f6c63430005110032",
									".code": [
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "MSTORE"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "LT"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SHR"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "7BFF0A01"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "GT"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "7BFF0A01"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "2052465E"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "528B7B8F"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "REVERT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP8"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP7"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP6"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP5"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP9"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "NOT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP8"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "RETURN"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "ADD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "ADD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP3"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MLOAD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP3"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MSTORE"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "ADD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MLOAD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SUB"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "RETURN"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "STOP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP3"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DIV"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "MUL"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "MLOAD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "MSTORE"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP4"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP3"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "MSTORE"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP4"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP3"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP3"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "STOP"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "DUP3"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SUB"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "RETURN"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "MLOAD"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "DUP3"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "DUP2"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "MSTORE"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ADD"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SWAP2"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "POP"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "POP"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "MLOAD"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SWAP2"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SUB"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SWAP1"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "RETURN"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "DUP2"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "AND"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP3"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP2"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "STOP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "LT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "INVALID"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "KECCAK256"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "LT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "KECCAK256"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "GT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP7"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MSTORE"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MSTORE"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "KECCAK256"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SLOAD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "EXP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DIV"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 855,
											"end": 862,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMPDEST"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPI"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "DUP1"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "REVERT"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPDEST"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SLOAD"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "EXP"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DIV"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "AND"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "MLOAD"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "MLOAD"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "DUP1"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "SWAP2"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "SUB"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "SWAP1"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "LOG3"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "DUP1"
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "EXP"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "DUP2"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "SLOAD"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "DUP2"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "MUL"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "NOT"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "AND"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "SWAP1"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "DUP4"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "AND"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "MUL"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "OR"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "SWAP1"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "SSTORE"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMPDEST"
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1236,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1247,
											"name": "CALLER"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "KECCAK256"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "SLOAD"
										},
										{
											"begin": 1220,
											"end": 1253,
											"name": "EQ"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "JUMPI"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "REVERT"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP3"
										},
										{
											"begin": 1276,
											"end": 1294,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1301,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1301,
											"name": "POP"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "DUP2"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "JUMPI"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "INVALID"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "JUMPDEST"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "MOD"
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SUB"
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "SWAP1"
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "POP"
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP3"
										},
										{
											"begin": 1369,
											"end": 1376,
											"name": "DUP3"
										},
										{
											"begin": 1348,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 701,
											"end": 708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "DUP1"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "SWAP1"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "SLOAD"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "SWAP1"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "EXP"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "SWAP1"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "DIV"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "AND"
										},
										{
											"begin": 717,
											"end": 730,
											"name": "SWAP1"
										},
										{
											"begin": 717,
											"end": 730,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "SLOAD"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "EXP"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "DIV"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "CALLER"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "EQ"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "POP"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SWAP1"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMPDEST"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 855,
											"end": 862,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMPDEST"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPI"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "DUP1"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "REVERT"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPDEST"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1696,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1677,
											"end": 1695,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "JUMPDEST"
										},
										{
											"begin": 1042,
											"end": 1046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "DUP3"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "MLOAD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP3"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "MLOAD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP4"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP2"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "MSTORE"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "DUP1"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "MLOAD"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "SWAP1"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "ADD"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "KECCAK256"
										},
										{
											"begin": 1067,
											"end": 1106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1106,
											"name": "SHR"
										},
										{
											"begin": 1055,
											"end": 1106,
											"name": "SWAP1"
										},
										{
											"begin": 1055,
											"end": 1106,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "SLOAD"
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "JUMPI"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "INVALID"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "MOD"
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "SWAP2"
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "SWAP2"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "SWAP1"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "POP"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 728,
											"end": 735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 738,
											"end": 745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MLOAD"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 763,
											"name": "DUP7"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 769,
											"name": "DUP6"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 771,
											"end": 772,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "SLOAD"
										},
										{
											"begin": 781,
											"end": 784,
											"name": "TIMESTAMP"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SUB"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "KECCAK256"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 812,
											"name": "SUB"
										},
										{
											"begin": 728,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 728,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "CALLER"
										},
										{
											"begin": 819,
											"end": 832,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 833,
											"end": 835,
											"name": "DUP4"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "KECCAK256"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "EXP"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "NOT"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "OR"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SSTORE"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 920,
											"end": 921,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 887,
											"end": 903,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 904,
											"end": 914,
											"name": "CALLER"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "AND"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "AND"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DUP2"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "MSTORE"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "ADD"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP1"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DUP2"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "MSTORE"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "ADD"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "KECCAK256"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SLOAD"
										},
										{
											"begin": 887,
											"end": 919,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 887,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "SWAP2"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "AND"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 856,
											"end": 872,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 883,
											"name": "CALLER"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "MSTORE"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "MSTORE"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "KECCAK256"
										},
										{
											"begin": 856,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 922,
											"name": "SSTORE"
										},
										{
											"begin": 856,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7"
										},
										{
											"begin": 944,
											"end": 946,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 953,
											"name": "DUP5"
										},
										{
											"begin": 955,
											"end": 959,
											"name": "DUP5"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP5"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP5"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "EXP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "NOT"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP5"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "LOG1"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 2021,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1848,
											"end": 2021,
											"name": "JUMPDEST"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "EQ"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "ISZERO"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "JUMPI"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "REVERT"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "JUMPDEST"
										},
										{
											"begin": 1982,
											"end": 1990,
											"name": "DUP1"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "AND"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP1"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "SLOAD"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "EXP"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DIV"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "AND"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "AND"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "MLOAD"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "MLOAD"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "DUP1"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "SWAP2"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "SUB"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "SWAP1"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "LOG3"
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP1"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP1"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "EXP"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP2"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SLOAD"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP2"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "MUL"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "NOT"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "AND"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP4"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "AND"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "MUL"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "OR"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SSTORE"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1848,
											"end": 2021,
											"name": "POP"
										},
										{
											"begin": 1848,
											"end": 2021,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "JUMPDEST"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1144,
											"end": 1145,
											"name": "DUP3"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "DUP5"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "ADD"
										},
										{
											"begin": 1128,
											"end": 1145,
											"name": "SWAP1"
										},
										{
											"begin": 1128,
											"end": 1145,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "DUP4"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "DUP2"
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "LT"
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "ISZERO"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "JUMPI"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "INVALID"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1173,
											"end": 1181,
											"name": "SWAP2"
										},
										{
											"begin": 1173,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1173,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "SWAP3"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SLOAD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "AND"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ISZERO"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "MUL"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SUB"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "AND"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DIV"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "MSTORE"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "KECCAK256"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DIV"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "LT"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "MLOAD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "NOT"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "AND"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "OR"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP6"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SSTORE"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP6"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SSTORE"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ISZERO"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "GT"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ISZERO"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "MLOAD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SSTORE"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "GT"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ISZERO"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "DUP2"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SSTORE"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "ADD"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMP"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 1388,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"createRandomZombie(string)": "7bff0a01",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"zombieToOwner(uint256)": "528b7b8f",
							"zombies(uint256)": "2052465e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/zombiefactory.sol\":\"ZombieFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable.sol\":{\"keccak256\":\"0x33f9862afb90391d02eed330569a92bc9143dd1cb5d6661d737bcedb22f24c68\",\"urls\":[\"bzz-raw://e8f11612996616032f44968b1850c1e71a94a368094141a23f229f2c1a260990\",\"dweb:/ipfs/QmXaxow6LX1FHFKXvMHbKrSn12csP81Fegmbu8HvhUd6MB\"]},\"contracts/safemath.sol\":{\"keccak256\":\"0x550edc31dffbfc4cc03a0782be2a00d21fb46c4c7701e7ad94119b2958df3141\",\"urls\":[\"bzz-raw://c83e2808dc5f0270c500b3d6778501864e2aa6ea544d945f5261a17ac332c1bb\",\"dweb:/ipfs/QmaPhmn7YRdF9pvmbGUr2sg9mvWMkxpid4fZDb66hNdvGm\"]},\"contracts/zombiefactory.sol\":{\"keccak256\":\"0xf07b2e29651df0fd29244e46f2c151c0279859bed6e21b7f4e083c2a39cf650b\",\"urls\":[\"bzz-raw://a14ebca476117f7de7f3d9fa001070963f24e3ab210badd848944f7d3820f7b4\",\"dweb:/ipfs/Qmc8hgkepQMVnwa2ukidYdzbPZiEFzK1sfYp9mCspTKP5Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/zombiefactory.sol:ZombieFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 424,
								"contract": "contracts/zombiefactory.sol:ZombieFactory",
								"label": "dnaDigits",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 429,
								"contract": "contracts/zombiefactory.sol:ZombieFactory",
								"label": "dnaModulus",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 432,
								"contract": "contracts/zombiefactory.sol:ZombieFactory",
								"label": "cooldownTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 448,
								"contract": "contracts/zombiefactory.sol:ZombieFactory",
								"label": "zombies",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(Zombie)445_storage)dyn_storage"
							},
							{
								"astId": 452,
								"contract": "contracts/zombiefactory.sol:ZombieFactory",
								"label": "zombieToOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 456,
								"contract": "contracts/zombiefactory.sol:ZombieFactory",
								"label": "ownerZombieCount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Zombie)445_storage)dyn_storage": {
								"base": "t_struct(Zombie)445_storage",
								"encoding": "dynamic_array",
								"label": "struct ZombieFactory.Zombie[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Zombie)445_storage": {
								"encoding": "inplace",
								"label": "struct ZombieFactory.Zombie",
								"members": [
									{
										"astId": 434,
										"contract": "contracts/zombiefactory.sol:ZombieFactory",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 436,
										"contract": "contracts/zombiefactory.sol:ZombieFactory",
										"label": "dna",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 438,
										"contract": "contracts/zombiefactory.sol:ZombieFactory",
										"label": "level",
										"offset": 0,
										"slot": "2",
										"type": "t_uint32"
									},
									{
										"astId": 440,
										"contract": "contracts/zombiefactory.sol:ZombieFactory",
										"label": "readyTime",
										"offset": 4,
										"slot": "2",
										"type": "t_uint32"
									},
									{
										"astId": 442,
										"contract": "contracts/zombiefactory.sol:ZombieFactory",
										"label": "winCount",
										"offset": 8,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 444,
										"contract": "contracts/zombiefactory.sol:ZombieFactory",
										"label": "lossCount",
										"offset": 10,
										"slot": "2",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			},
			"contracts/zombiefeeding.sol": {
				"KittyInterface": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "getKitty",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isGestating",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isReady",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "cooldownIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nextActionAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "siringWithId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "birthTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "matronId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sireId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "generation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getKitty(uint256)": "e98b7f4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getKitty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isGestating\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isReady\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cooldownIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextActionAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"siringWithId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"birthTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"matronId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sireId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"generation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/zombiefeeding.sol\":\"KittyInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable.sol\":{\"keccak256\":\"0x33f9862afb90391d02eed330569a92bc9143dd1cb5d6661d737bcedb22f24c68\",\"urls\":[\"bzz-raw://e8f11612996616032f44968b1850c1e71a94a368094141a23f229f2c1a260990\",\"dweb:/ipfs/QmXaxow6LX1FHFKXvMHbKrSn12csP81Fegmbu8HvhUd6MB\"]},\"contracts/safemath.sol\":{\"keccak256\":\"0x550edc31dffbfc4cc03a0782be2a00d21fb46c4c7701e7ad94119b2958df3141\",\"urls\":[\"bzz-raw://c83e2808dc5f0270c500b3d6778501864e2aa6ea544d945f5261a17ac332c1bb\",\"dweb:/ipfs/QmaPhmn7YRdF9pvmbGUr2sg9mvWMkxpid4fZDb66hNdvGm\"]},\"contracts/zombiefactory.sol\":{\"keccak256\":\"0xf07b2e29651df0fd29244e46f2c151c0279859bed6e21b7f4e083c2a39cf650b\",\"urls\":[\"bzz-raw://a14ebca476117f7de7f3d9fa001070963f24e3ab210badd848944f7d3820f7b4\",\"dweb:/ipfs/Qmc8hgkepQMVnwa2ukidYdzbPZiEFzK1sfYp9mCspTKP5Y\"]},\"contracts/zombiefeeding.sol\":{\"keccak256\":\"0x820b49ddee171a492dd5635cca200e45ec003fcb1486f9cabf2afab407daf613\",\"urls\":[\"bzz-raw://109785f322dfc562af1830fc0b0c39eebf3aa5183343938758b6d30695d3892e\",\"dweb:/ipfs/Qmen1LadtnAdfutgD93c7e2Sa76xQgacsSCBMV1yeEF4ys\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"ZombieFeeding": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "zombieId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								}
							],
							"name": "NewZombie",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "createRandomZombie",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_zombieId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_kittyId",
									"type": "uint256"
								}
							],
							"name": "feedOnKitty",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setKittyContractAddress",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombieToOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombies",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "level",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "readyTime",
									"type": "uint32"
								},
								{
									"internalType": "uint16",
									"name": "winCount",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "lossCount",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"return": "true if `msg.sender` is the owner of the contract."
							},
							"owner()": {
								"return": "the address of the owner."
							},
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/zombiefeeding.sol\":400:1690  contract ZombieFeeding is ZombieFactory {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/zombiefactory.sol\":303:305  16 */\n  0x10\n    /* \"contracts/zombiefactory.sol\":286:305  uint dnaDigits = 16 */\n  0x01\n  sstore\n    /* \"contracts/zombiefactory.sol\":334:343  dnaDigits */\n  sload(0x01)\n    /* \"contracts/zombiefactory.sol\":328:330  10 */\n  0x0a\n    /* \"contracts/zombiefactory.sol\":328:343  10 ** dnaDigits */\n  exp\n    /* \"contracts/zombiefactory.sol\":310:343  uint dnaModulus = 10 ** dnaDigits */\n  0x02\n  sstore\n    /* \"contracts/zombiefactory.sol\":368:374  1 days */\n  0x015180\n    /* \"contracts/zombiefactory.sol\":348:374  uint cooldownTime = 1 days */\n  0x03\n  sstore\n    /* \"contracts/ownable.sol\":538:548  msg.sender */\n  caller\n    /* \"contracts/ownable.sol\":529:535  _owner */\n  0x00\n  dup1\n    /* \"contracts/ownable.sol\":529:548  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ownable.sol\":593:599  _owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownable.sol\":560:600  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownable.sol\":589:590  0 */\n  0x00\n    /* \"contracts/ownable.sol\":560:600  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/zombiefeeding.sol\":400:1690  contract ZombieFeeding is ZombieFactory {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/zombiefeeding.sol\":400:1690  contract ZombieFeeding is ZombieFactory {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/zombiefeeding.sol\":400:1690  contract ZombieFeeding is ZombieFactory {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7bff0a01\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x17a7f4cc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2052465e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x528b7b8f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f4623f1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/zombiefeeding.sol\":1489:1687  function feedOnKitty(uint _zombieId, uint _kittyId) public {\r... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/zombiefeeding.sol\":1489:1687  function feedOnKitty(uint _zombieId, uint _kittyId) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/zombiefactory.sol\":527:550  Zombie[] public zombies */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n        /* \"contracts/zombiefactory.sol\":527:550  Zombie[] public zombies */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup9\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_19:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_19)\n    tag_21:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/zombiefactory.sol\":527:550  Zombie[] public zombies */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_22:\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/zombiefactory.sol\":557:603  mapping (uint => address) public zombieToOwner */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"contracts/zombiefactory.sol\":557:603  mapping (uint => address) public zombieToOwner */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/zombiefeeding.sol\":593:716  function setKittyContractAddress(address _address) external onlyOwner {\r... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"contracts/zombiefeeding.sol\":593:716  function setKittyContractAddress(address _address) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/ownable.sol\":1314:1444  function renounceOwnership() public onlyOwner {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_35:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/ownable.sol\":664:736  function owner() public view returns(address) {\r... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":962:1047  function isOwner() public view returns(bool) {\r... */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":1608:1711  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/ownable.sol\":1608:1711  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/zombiefeeding.sol\":1489:1687  function feedOnKitty(uint _zombieId, uint _kittyId) public {\r... */\n    tag_15:\n        /* \"contracts/zombiefeeding.sol\":1555:1568  uint kittyDna */\n      0x00\n        /* \"contracts/zombiefeeding.sol\":1597:1610  kittyContract */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/zombiefeeding.sol\":1597:1619  kittyContract.getKitty */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe98b7f4d\n        /* \"contracts/zombiefeeding.sol\":1620:1628  _kittyId */\n      dup4\n        /* \"contracts/zombiefeeding.sol\":1597:1629  kittyContract.getKitty(_kittyId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x0140\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"contracts/zombiefeeding.sol\":1597:1629  kittyContract.getKitty(_kittyId) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"contracts/zombiefeeding.sol\":1597:1629  kittyContract.getKitty(_kittyId) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:16   */\n      0x0140\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"contracts/zombiefeeding.sol\":1597:1629  kittyContract.getKitty(_kittyId) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefeeding.sol\":1575:1629  (,,,,,,,,,kittyDna) = kittyContract.getKitty(_kittyId) */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      swap3\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      swap2\n      pop\n      pop\n        /* \"contracts/zombiefeeding.sol\":1636:1681  feedAndMultiply(_zombieId, kittyDna, \"kitty\") */\n      tag_48\n        /* \"contracts/zombiefeeding.sol\":1652:1661  _zombieId */\n      dup4\n        /* \"contracts/zombiefeeding.sol\":1663:1671  kittyDna */\n      dup3\n        /* \"contracts/zombiefeeding.sol\":1636:1681  feedAndMultiply(_zombieId, kittyDna, \"kitty\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x6b69747479000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/zombiefeeding.sol\":1636:1651  feedAndMultiply */\n      tag_49\n        /* \"contracts/zombiefeeding.sol\":1636:1681  feedAndMultiply(_zombieId, kittyDna, \"kitty\") */\n      jump\t// in\n    tag_48:\n        /* \"contracts/zombiefeeding.sol\":1489:1687  function feedOnKitty(uint _zombieId, uint _kittyId) public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":527:550  Zombie[] public zombies */\n    tag_18:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_50\n      jumpi\n      invalid\n    tag_50:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_52\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_53\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_52)\n    tag_53:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_54:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_54\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x0a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":557:603  mapping (uint => address) public zombieToOwner */\n    tag_25:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/zombiefeeding.sol\":593:716  function setKittyContractAddress(address _address) external onlyOwner {\r... */\n    tag_28:\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      tag_56\n        /* \"contracts/ownable.sol\":855:862  isOwner */\n      tag_40\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      jump\t// in\n    tag_56:\n        /* \"contracts/ownable.sol\":847:865  require(isOwner()) */\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n        /* \"contracts/zombiefeeding.sol\":701:709  _address */\n      dup1\n        /* \"contracts/zombiefeeding.sol\":670:683  kittyContract */\n      0x07\n      0x00\n        /* \"contracts/zombiefeeding.sol\":670:710  kittyContract = KittyInterface(_address) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefeeding.sol\":593:716  function setKittyContractAddress(address _address) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ownable.sol\":1314:1444  function renounceOwnership() public onlyOwner {\r... */\n    tag_30:\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      tag_60\n        /* \"contracts/ownable.sol\":855:862  isOwner */\n      tag_40\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      jump\t// in\n    tag_60:\n        /* \"contracts/ownable.sol\":847:865  require(isOwner()) */\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n        /* \"contracts/ownable.sol\":1409:1410  0 */\n      0x00\n        /* \"contracts/ownable.sol\":1372:1412  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1393:1399  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1372:1412  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownable.sol\":1436:1437  0 */\n      0x00\n        /* \"contracts/ownable.sol\":1419:1425  _owner */\n      dup1\n      0x00\n        /* \"contracts/ownable.sol\":1419:1438  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable.sol\":1314:1444  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n    tag_36:\n        /* \"contracts/zombiefactory.sol\":1252:1253  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1220:1236  ownerZombieCount */\n      0x06\n        /* \"contracts/zombiefactory.sol\":1220:1248  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1237:1247  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":1220:1248  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/zombiefactory.sol\":1220:1253  ownerZombieCount[msg.sender] == 0 */\n      eq\n        /* \"contracts/zombiefactory.sol\":1212:1254  require(ownerZombieCount[msg.sender] == 0) */\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n        /* \"contracts/zombiefactory.sol\":1261:1273  uint randDna */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1276:1301  _generateRandomDna(_name) */\n      tag_65\n        /* \"contracts/zombiefactory.sol\":1295:1300  _name */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1276:1294  _generateRandomDna */\n      tag_66\n        /* \"contracts/zombiefactory.sol\":1276:1301  _generateRandomDna(_name) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/zombiefactory.sol\":1261:1301  uint randDna = _generateRandomDna(_name) */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1338:1341  100 */\n      0x64\n        /* \"contracts/zombiefactory.sol\":1328:1335  randDna */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1328:1341  randDna % 100 */\n      dup2\n      tag_67\n      jumpi\n      invalid\n    tag_67:\n      mod\n        /* \"contracts/zombiefactory.sol\":1318:1325  randDna */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1318:1341  randDna - randDna % 100 */\n      sub\n        /* \"contracts/zombiefactory.sol\":1308:1341  randDna = randDna - randDna % 100 */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1348:1377  _createZombie(_name, randDna) */\n      tag_68\n        /* \"contracts/zombiefactory.sol\":1362:1367  _name */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1369:1376  randDna */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1348:1361  _createZombie */\n      tag_69\n        /* \"contracts/zombiefactory.sol\":1348:1377  _createZombie(_name, randDna) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/zombiefactory.sol\":1149:1383  function createRandomZombie(string memory _name) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ownable.sol\":664:736  function owner() public view returns(address) {\r... */\n    tag_38:\n        /* \"contracts/ownable.sol\":701:708  address */\n      0x00\n        /* \"contracts/ownable.sol\":724:730  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":717:730  return _owner */\n      swap1\n      pop\n        /* \"contracts/ownable.sol\":664:736  function owner() public view returns(address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownable.sol\":962:1047  function isOwner() public view returns(bool) {\r... */\n    tag_40:\n        /* \"contracts/ownable.sol\":1001:1005  bool */\n      0x00\n        /* \"contracts/ownable.sol\":1035:1041  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1021:1041  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1021:1031  msg.sender */\n      caller\n        /* \"contracts/ownable.sol\":1021:1041  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownable.sol\":1014:1041  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/ownable.sol\":962:1047  function isOwner() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownable.sol\":1608:1711  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_43:\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      tag_73\n        /* \"contracts/ownable.sol\":855:862  isOwner */\n      tag_40\n        /* \"contracts/ownable.sol\":855:864  isOwner() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/ownable.sol\":847:865  require(isOwner()) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n        /* \"contracts/ownable.sol\":1677:1705  _transferOwnership(newOwner) */\n      tag_76\n        /* \"contracts/ownable.sol\":1696:1704  newOwner */\n      dup2\n        /* \"contracts/ownable.sol\":1677:1695  _transferOwnership */\n      tag_77\n        /* \"contracts/ownable.sol\":1677:1705  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/ownable.sol\":1608:1711  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/zombiefeeding.sol\":971:1483  function feedAndMultiply(uint _zombieId, uint _targetDna, string memory _species) internal onlyOwnerOf(_zombieId) {\r... */\n    tag_49:\n        /* \"contracts/zombiefeeding.sol\":1074:1083  _zombieId */\n      dup3\n        /* \"contracts/zombiefeeding.sol\":548:561  zombieToOwner */\n      0x05\n        /* \"contracts/zombiefeeding.sol\":548:572  zombieToOwner[_zombieId] */\n      0x00\n        /* \"contracts/zombiefeeding.sol\":562:571  _zombieId */\n      dup3\n        /* \"contracts/zombiefeeding.sol\":548:572  zombieToOwner[_zombieId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/zombiefeeding.sol\":534:572  msg.sender == zombieToOwner[_zombieId] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/zombiefeeding.sol\":534:544  msg.sender */\n      caller\n        /* \"contracts/zombiefeeding.sol\":534:572  msg.sender == zombieToOwner[_zombieId] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/zombiefeeding.sol\":526:573  require(msg.sender == zombieToOwner[_zombieId]) */\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n        /* \"contracts/zombiefeeding.sol\":1092:1115  Zombie storage myZombie */\n      0x00\n        /* \"contracts/zombiefeeding.sol\":1118:1125  zombies */\n      0x04\n        /* \"contracts/zombiefeeding.sol\":1126:1135  _zombieId */\n      dup6\n        /* \"contracts/zombiefeeding.sol\":1118:1136  zombies[_zombieId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_81\n      jumpi\n      invalid\n    tag_81:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/zombiefeeding.sol\":1092:1136  Zombie storage myZombie = zombies[_zombieId] */\n      swap1\n      pop\n        /* \"contracts/zombiefeeding.sol\":1151:1169  _isReady(myZombie) */\n      tag_83\n        /* \"contracts/zombiefeeding.sol\":1160:1168  myZombie */\n      dup2\n        /* \"contracts/zombiefeeding.sol\":1151:1159  _isReady */\n      tag_84\n        /* \"contracts/zombiefeeding.sol\":1151:1169  _isReady(myZombie) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/zombiefeeding.sol\":1143:1170  require(_isReady(myZombie)) */\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n        /* \"contracts/zombiefeeding.sol\":1203:1213  dnaModulus */\n      sload(0x02)\n        /* \"contracts/zombiefeeding.sol\":1190:1200  _targetDna */\n      dup5\n        /* \"contracts/zombiefeeding.sol\":1190:1213  _targetDna % dnaModulus */\n      dup2\n      tag_86\n      jumpi\n      invalid\n    tag_86:\n      mod\n        /* \"contracts/zombiefeeding.sol\":1177:1213  _targetDna = _targetDna % dnaModulus */\n      swap4\n      pop\n        /* \"contracts/zombiefeeding.sol\":1220:1231  uint newDna */\n      0x00\n        /* \"contracts/zombiefeeding.sol\":1264:1265  2 */\n      0x02\n        /* \"contracts/zombiefeeding.sol\":1250:1260  _targetDna */\n      dup6\n        /* \"contracts/zombiefeeding.sol\":1235:1243  myZombie */\n      dup4\n        /* \"contracts/zombiefeeding.sol\":1235:1247  myZombie.dna */\n      0x01\n      add\n      sload\n        /* \"contracts/zombiefeeding.sol\":1235:1260  myZombie.dna + _targetDna */\n      add\n        /* \"contracts/zombiefeeding.sol\":1234:1265  (myZombie.dna + _targetDna) / 2 */\n      dup2\n      tag_87\n      jumpi\n      invalid\n    tag_87:\n      div\n        /* \"contracts/zombiefeeding.sol\":1220:1265  uint newDna = (myZombie.dna + _targetDna) / 2 */\n      swap1\n      pop\n        /* \"contracts/zombiefeeding.sol\":1327:1352  abi.encodePacked(\"kitty\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6b69747479000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x05\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/zombiefeeding.sol\":1327:1352  abi.encodePacked(\"kitty\") */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/zombiefeeding.sol\":1317:1353  keccak256(abi.encodePacked(\"kitty\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/zombiefeeding.sol\":1303:1311  _species */\n      dup5\n        /* \"contracts/zombiefeeding.sol\":1286:1312  abi.encodePacked(_species) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_88:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_88)\n    tag_90:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefeeding.sol\":1286:1312  abi.encodePacked(_species) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/zombiefeeding.sol\":1286:1312  abi.encodePacked(_species) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/zombiefeeding.sol\":1276:1313  keccak256(abi.encodePacked(_species)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/zombiefeeding.sol\":1276:1353  keccak256(abi.encodePacked(_species)) == keccak256(abi.encodePacked(\"kitty\")) */\n      eq\n        /* \"contracts/zombiefeeding.sol\":1272:1407  if (keccak256(abi.encodePacked(_species)) == keccak256(abi.encodePacked(\"kitty\"))) {\r... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/zombiefeeding.sol\":1397:1399  99 */\n      0x63\n        /* \"contracts/zombiefeeding.sol\":1391:1394  100 */\n      0x64\n        /* \"contracts/zombiefeeding.sol\":1382:1388  newDna */\n      dup3\n        /* \"contracts/zombiefeeding.sol\":1382:1394  newDna % 100 */\n      dup2\n      tag_92\n      jumpi\n      invalid\n    tag_92:\n      mod\n        /* \"contracts/zombiefeeding.sol\":1373:1379  newDna */\n      dup3\n        /* \"contracts/zombiefeeding.sol\":1373:1394  newDna - newDna % 100 */\n      sub\n        /* \"contracts/zombiefeeding.sol\":1373:1399  newDna - newDna % 100 + 99 */\n      add\n        /* \"contracts/zombiefeeding.sol\":1364:1399  newDna = newDna - newDna % 100 + 99 */\n      swap1\n      pop\n        /* \"contracts/zombiefeeding.sol\":1272:1407  if (keccak256(abi.encodePacked(_species)) == keccak256(abi.encodePacked(\"kitty\"))) {\r... */\n    tag_91:\n        /* \"contracts/zombiefeeding.sol\":1413:1444  _createZombie(\"NoName\", newDna) */\n      tag_93\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4e6f4e616d650000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/zombiefeeding.sol\":1437:1443  newDna */\n      dup3\n        /* \"contracts/zombiefeeding.sol\":1413:1426  _createZombie */\n      tag_69\n        /* \"contracts/zombiefeeding.sol\":1413:1444  _createZombie(\"NoName\", newDna) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/zombiefeeding.sol\":1451:1477  _triggerCooldown(myZombie) */\n      tag_94\n        /* \"contracts/zombiefeeding.sol\":1468:1476  myZombie */\n      dup3\n        /* \"contracts/zombiefeeding.sol\":1451:1467  _triggerCooldown */\n      tag_95\n        /* \"contracts/zombiefeeding.sol\":1451:1477  _triggerCooldown(myZombie) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/zombiefeeding.sol\":580:581  _ */\n      pop\n      pop\n        /* \"contracts/zombiefeeding.sol\":971:1483  function feedAndMultiply(uint _zombieId, uint _targetDna, string memory _species) internal onlyOwnerOf(_zombieId) {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":972:1143  function _generateRandomDna(string memory _str) private view returns (uint) {\r... */\n    tag_66:\n        /* \"contracts/zombiefactory.sol\":1042:1046  uint */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1055:1064  uint rand */\n      dup1\n        /* \"contracts/zombiefactory.sol\":1099:1103  _str */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1082:1104  abi.encodePacked(_str) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_97:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_97)\n    tag_99:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":1082:1104  abi.encodePacked(_str) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/zombiefactory.sol\":1082:1104  abi.encodePacked(_str) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/zombiefactory.sol\":1072:1105  keccak256(abi.encodePacked(_str)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/zombiefactory.sol\":1067:1106  uint(keccak256(abi.encodePacked(_str))) */\n      0x00\n      shr\n        /* \"contracts/zombiefactory.sol\":1055:1106  uint rand = uint(keccak256(abi.encodePacked(_str))) */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1127:1137  dnaModulus */\n      sload(0x02)\n        /* \"contracts/zombiefactory.sol\":1120:1124  rand */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1120:1137  rand % dnaModulus */\n      dup2\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n      mod\n        /* \"contracts/zombiefactory.sol\":1113:1137  return rand % dnaModulus */\n      swap2\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":972:1143  function _generateRandomDna(string memory _str) private view returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":657:966  function _createZombie(string memory _name, uint _dna) internal {\r... */\n    tag_69:\n        /* \"contracts/zombiefactory.sol\":728:735  uint id */\n      0x00\n        /* \"contracts/zombiefactory.sol\":811:812  1 */\n      0x01\n        /* \"contracts/zombiefactory.sol\":738:745  zombies */\n      0x04\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/zombiefactory.sol\":758:763  _name */\n      dup7\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":765:769  _dna */\n      dup6\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":771:772  1 */\n      0x01\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":787:799  cooldownTime */\n      sload(0x03)\n        /* \"contracts/zombiefactory.sol\":781:784  now */\n      timestamp\n        /* \"contracts/zombiefactory.sol\":781:799  now + cooldownTime */\n      add\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":802:803  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":805:806  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":751:807  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/zombiefactory.sol\":738:808  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/zombiefactory.sol\":738:808  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x04)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x0a)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":738:812  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) - 1 */\n      sub\n        /* \"contracts/zombiefactory.sol\":728:812  uint id = zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) - 1 */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":839:849  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":819:832  zombieToOwner */\n      0x05\n        /* \"contracts/zombiefactory.sol\":819:836  zombieToOwner[id] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":833:835  id */\n      dup4\n        /* \"contracts/zombiefactory.sol\":819:836  zombieToOwner[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/zombiefactory.sol\":819:849  zombieToOwner[id] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefactory.sol\":887:922  ownerZombieCount[msg.sender].add(1) */\n      tag_105\n        /* \"contracts/zombiefactory.sol\":920:921  1 */\n      0x01\n        /* \"contracts/zombiefactory.sol\":887:903  ownerZombieCount */\n      0x06\n        /* \"contracts/zombiefactory.sol\":887:915  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":904:914  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":887:915  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/zombiefactory.sol\":887:919  ownerZombieCount[msg.sender].add */\n      tag_106\n      swap1\n        /* \"contracts/zombiefactory.sol\":887:922  ownerZombieCount[msg.sender].add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/zombiefactory.sol\":856:872  ownerZombieCount */\n      0x06\n        /* \"contracts/zombiefactory.sol\":856:884  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":873:883  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":856:884  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/zombiefactory.sol\":856:922  ownerZombieCount[msg.sender] = ownerZombieCount[msg.sender].add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefactory.sol\":934:960  NewZombie(id, _name, _dna) */\n      0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7\n        /* \"contracts/zombiefactory.sol\":944:946  id */\n      dup2\n        /* \"contracts/zombiefactory.sol\":948:953  _name */\n      dup5\n        /* \"contracts/zombiefactory.sol\":955:959  _dna */\n      dup5\n        /* \"contracts/zombiefactory.sol\":934:960  NewZombie(id, _name, _dna) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_107:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_107)\n    tag_109:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/zombiefactory.sol\":934:960  NewZombie(id, _name, _dna) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_110:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/zombiefactory.sol\":657:966  function _createZombie(string memory _name, uint _dna) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ownable.sol\":1848:2021  function _transferOwnership(address newOwner) internal {\r... */\n    tag_77:\n        /* \"contracts/ownable.sol\":1938:1939  0 */\n      0x00\n        /* \"contracts/ownable.sol\":1918:1940  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1918:1926  newOwner */\n      dup2\n        /* \"contracts/ownable.sol\":1918:1940  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ownable.sol\":1910:1941  require(newOwner != address(0)) */\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n        /* \"contracts/ownable.sol\":1982:1990  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":1953:1991  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1974:1980  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1953:1991  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownable.sol\":2007:2015  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":1998:2004  _owner */\n      0x00\n      dup1\n        /* \"contracts/ownable.sol\":1998:2015  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable.sol\":1848:2021  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/zombiefeeding.sol\":846:965  function _isReady(Zombie storage _zombie) internal view returns (bool) {\r... */\n    tag_84:\n        /* \"contracts/zombiefeeding.sol\":911:915  bool */\n      0x00\n        /* \"contracts/zombiefeeding.sol\":955:958  now */\n      timestamp\n        /* \"contracts/zombiefeeding.sol\":934:941  _zombie */\n      dup3\n        /* \"contracts/zombiefeeding.sol\":934:951  _zombie.readyTime */\n      0x02\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/zombiefeeding.sol\":934:958  _zombie.readyTime <= now */\n      0xffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/zombiefeeding.sol\":926:959  return (_zombie.readyTime <= now) */\n      swap1\n      pop\n        /* \"contracts/zombiefeeding.sol\":846:965  function _isReady(Zombie storage _zombie) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/zombiefeeding.sol\":722:840  function _triggerCooldown(Zombie storage _zombie) internal {\r... */\n    tag_95:\n        /* \"contracts/zombiefeeding.sol\":821:833  cooldownTime */\n      sload(0x03)\n        /* \"contracts/zombiefeeding.sol\":815:818  now */\n      timestamp\n        /* \"contracts/zombiefeeding.sol\":815:833  now + cooldownTime */\n      add\n        /* \"contracts/zombiefeeding.sol\":788:795  _zombie */\n      dup2\n        /* \"contracts/zombiefeeding.sol\":788:805  _zombie.readyTime */\n      0x02\n      add\n      0x04\n        /* \"contracts/zombiefeeding.sol\":788:834  _zombie.readyTime = uint32(now + cooldownTime) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefeeding.sol\":722:840  function _triggerCooldown(Zombie storage _zombie) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/safemath.sol\":1054:1187  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_106:\n        /* \"contracts/safemath.sol\":1112:1119  uint256 */\n      0x00\n        /* \"contracts/safemath.sol\":1128:1137  uint256 c */\n      dup1\n        /* \"contracts/safemath.sol\":1144:1145  b */\n      dup3\n        /* \"contracts/safemath.sol\":1140:1141  a */\n      dup5\n        /* \"contracts/safemath.sol\":1140:1145  a + b */\n      add\n        /* \"contracts/safemath.sol\":1128:1145  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/safemath.sol\":1164:1165  a */\n      dup4\n        /* \"contracts/safemath.sol\":1159:1160  c */\n      dup2\n        /* \"contracts/safemath.sol\":1159:1165  c >= a */\n      lt\n      iszero\n        /* \"contracts/safemath.sol\":1152:1166  assert(c >= a) */\n      tag_116\n      jumpi\n      invalid\n    tag_116:\n        /* \"contracts/safemath.sol\":1180:1181  c */\n      dup1\n        /* \"contracts/safemath.sol\":1173:1181  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/safemath.sol\":1054:1187  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/zombiefeeding.sol\":400:1690  contract ZombieFeeding is ZombieFactory {\r... */\n    tag_104:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_118\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_117)\n    tag_118:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_117\n      jumpi\n      swap2\n      dup3\n      add\n    tag_119:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_119)\n    tag_120:\n    tag_117:\n      pop\n      swap1\n      pop\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      pop\n      swap1\n      jump\t// out\n    tag_122:\n      tag_123\n      swap2\n      swap1\n    tag_124:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_124)\n    tag_125:\n      pop\n      swap1\n      jump\n    tag_123:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820ad25080d39b73630eddd74cb589c83f2eed289434664dd895ad715c6a6ff148f64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526010600155600154600a0a60025562015180600355336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361107d806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146102745780637bff0a011461027e5780638da5cb5b146103395780638f32d59b14610383578063f2fde38b146103a557610093565b806317a7f4cc146100985780632052465e146100d0578063528b7b8f146101c25780635f4623f114610230575b600080fd5b6100ce600480360360408110156100ae57600080fd5b8101908080359060200190929190803590602001909291905050506103e9565b005b6100fc600480360360208110156100e657600080fd5b8101908080359060200190929190505050610574565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b83811015610182578082015181840152602081019050610167565b50505050905090810190601f1680156101af5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6101ee600480360360208110156101d857600080fd5b8101908080359060200190929190505050610691565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102726004803603602081101561024657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106c4565b005b61027c610719565b005b6103376004803603602081101561029457600080fd5b81019080803590602001906401000000008111156102b157600080fd5b8201836020820111156102c357600080fd5b803590602001918460018302840111640100000000831117156102e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107e9565b005b61034161085f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61038b610888565b604051808215151515815260200191505060405180910390f35b6103e7600480360360208110156103bb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108df565b005b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d61014081101561048a57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061056f83826040518060400160405280600581526020017f6b697474790000000000000000000000000000000000000000000000000000008152506108fc565b505050565b6004818154811061058157fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106cc610888565b6106d557600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610721610888565b61072a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461083557600080fd5b600061084082610ade565b90506064818161084c57fe5b068103905061085b8282610b6c565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6108e7610888565b6108f057600080fd5b6108f981610e3e565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096857600080fd5b60006004858154811061097757fe5b9060005260206000209060030201905061099081610f36565b61099957600080fd5b60025484816109a457fe5b0693506000600285836001015401816109b957fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b60208310610a3a5780518252602082019150602081019050602083039250610a17565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415610a8e57606360648281610a8757fe5b0682030190505b610acd6040518060400160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082610b6c565b610ad682610f5d565b505050505050565b600080826040516020018082805190602001908083835b60208310610b185780518252602082019150602081019050602083039250610af5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c90506002548181610b6357fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff16815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000019080519060200190610c01929190610fa3565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d4a6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8790919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610dfd578082015181840152602081019050610de2565b50505050905090810190601f168015610e2a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e7857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600080828401905083811015610f9957fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610fe457805160ff1916838001178555611012565b82800160010185558215611012579182015b82811115611011578251825591602001919060010190610ff6565b5b50905061101f9190611023565b5090565b61104591905b80821115611041576000816000905550600101611029565b5090565b9056fea265627a7a72315820ad25080d39b73630eddd74cb589c83f2eed289434664dd895ad715c6a6ff148f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x10 PUSH1 0x1 SSTORE PUSH1 0x1 SLOAD PUSH1 0xA EXP PUSH1 0x2 SSTORE PUSH3 0x15180 PUSH1 0x3 SSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x107D DUP1 PUSH2 0xE4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x17A7F4CC EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2052465E EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x5F4623F1 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x182 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x167 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1AF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27C PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x7E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE98B7F4D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH2 0x140 DUP2 LT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0x56F DUP4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6B69747479000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x8FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x581 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x62D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x602 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x610 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x888 JUMP JUMPDEST PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x721 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x840 DUP3 PUSH2 0xADE JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP2 PUSH2 0x84C JUMPI INVALID JUMPDEST MOD DUP2 SUB SWAP1 POP PUSH2 0x85B DUP3 DUP3 PUSH2 0xB6C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E7 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F9 DUP2 PUSH2 0xE3E JUMP JUMPDEST POP JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x977 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH2 0x990 DUP2 PUSH2 0xF36 JUMP JUMPDEST PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP5 DUP2 PUSH2 0x9A4 JUMPI INVALID JUMPDEST MOD SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP6 DUP4 PUSH1 0x1 ADD SLOAD ADD DUP2 PUSH2 0x9B9 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6B69747479000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xA3A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0xA8E JUMPI PUSH1 0x63 PUSH1 0x64 DUP3 DUP2 PUSH2 0xA87 JUMPI INVALID JUMPDEST MOD DUP3 SUB ADD SWAP1 POP JUMPDEST PUSH2 0xACD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F4E616D650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xAD6 DUP3 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB18 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 PUSH2 0xB63 JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 SLOAD TIMESTAMP ADD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xC01 SWAP3 SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP SUB SWAP1 POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD4A PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF87 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDFD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDE2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE2A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP DUP3 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP ADD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF99 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xFE4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1012 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1012 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1011 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFF6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x1023 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1045 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1029 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xAD 0x25 ADDMOD 0xD CODECOPY 0xB7 CALLDATASIZE ADDRESS 0xED 0xDD PUSH21 0xCB589C83F2EED289434664DD895AD715C6A6FF148F PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "400:1290:3:-;;;303:2:2;286:19;;334:9;;328:2;:15;310:33;;368:6;348:26;;538:10:0;529:6;;:19;;;;;;;;;;;;;;;;;;593:6;;;;;;;;;;;560:40;;589:1;560:40;;;;;;;;;;;;400:1290:3;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146102745780637bff0a011461027e5780638da5cb5b146103395780638f32d59b14610383578063f2fde38b146103a557610093565b806317a7f4cc146100985780632052465e146100d0578063528b7b8f146101c25780635f4623f114610230575b600080fd5b6100ce600480360360408110156100ae57600080fd5b8101908080359060200190929190803590602001909291905050506103e9565b005b6100fc600480360360208110156100e657600080fd5b8101908080359060200190929190505050610574565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b83811015610182578082015181840152602081019050610167565b50505050905090810190601f1680156101af5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6101ee600480360360208110156101d857600080fd5b8101908080359060200190929190505050610691565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102726004803603602081101561024657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106c4565b005b61027c610719565b005b6103376004803603602081101561029457600080fd5b81019080803590602001906401000000008111156102b157600080fd5b8201836020820111156102c357600080fd5b803590602001918460018302840111640100000000831117156102e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107e9565b005b61034161085f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61038b610888565b604051808215151515815260200191505060405180910390f35b6103e7600480360360208110156103bb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108df565b005b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d61014081101561048a57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061056f83826040518060400160405280600581526020017f6b697474790000000000000000000000000000000000000000000000000000008152506108fc565b505050565b6004818154811061058157fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106cc610888565b6106d557600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610721610888565b61072a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461083557600080fd5b600061084082610ade565b90506064818161084c57fe5b068103905061085b8282610b6c565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6108e7610888565b6108f057600080fd5b6108f981610e3e565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096857600080fd5b60006004858154811061097757fe5b9060005260206000209060030201905061099081610f36565b61099957600080fd5b60025484816109a457fe5b0693506000600285836001015401816109b957fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b60208310610a3a5780518252602082019150602081019050602083039250610a17565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415610a8e57606360648281610a8757fe5b0682030190505b610acd6040518060400160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082610b6c565b610ad682610f5d565b505050505050565b600080826040516020018082805190602001908083835b60208310610b185780518252602082019150602081019050602083039250610af5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c90506002548181610b6357fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff16815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000019080519060200190610c01929190610fa3565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d4a6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8790919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610dfd578082015181840152602081019050610de2565b50505050905090810190601f168015610e2a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e7857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600080828401905083811015610f9957fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610fe457805160ff1916838001178555611012565b82800160010185558215611012579182015b82811115611011578251825591602001919060010190610ff6565b5b50905061101f9190611023565b5090565b61104591905b80821115611041576000816000905550600101611029565b5090565b9056fea265627a7a72315820ad25080d39b73630eddd74cb589c83f2eed289434664dd895ad715c6a6ff148f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x17A7F4CC EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2052465E EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x5F4623F1 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x182 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x167 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1AF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27C PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x7E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE98B7F4D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH2 0x140 DUP2 LT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0x56F DUP4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6B69747479000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x8FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x581 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x62D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x602 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x610 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x888 JUMP JUMPDEST PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x721 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x840 DUP3 PUSH2 0xADE JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP2 PUSH2 0x84C JUMPI INVALID JUMPDEST MOD DUP2 SUB SWAP1 POP PUSH2 0x85B DUP3 DUP3 PUSH2 0xB6C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E7 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F9 DUP2 PUSH2 0xE3E JUMP JUMPDEST POP JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x977 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH2 0x990 DUP2 PUSH2 0xF36 JUMP JUMPDEST PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP5 DUP2 PUSH2 0x9A4 JUMPI INVALID JUMPDEST MOD SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP6 DUP4 PUSH1 0x1 ADD SLOAD ADD DUP2 PUSH2 0x9B9 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6B69747479000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xA3A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0xA8E JUMPI PUSH1 0x63 PUSH1 0x64 DUP3 DUP2 PUSH2 0xA87 JUMPI INVALID JUMPDEST MOD DUP3 SUB ADD SWAP1 POP JUMPDEST PUSH2 0xACD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F4E616D650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xAD6 DUP3 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB18 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 PUSH2 0xB63 JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 SLOAD TIMESTAMP ADD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xC01 SWAP3 SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP SUB SWAP1 POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD4A PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF87 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDFD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDE2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE2A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP DUP3 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP ADD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF99 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xFE4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1012 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1012 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1011 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFF6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x1023 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1045 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1029 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xAD 0x25 ADDMOD 0xD CODECOPY 0xB7 CALLDATASIZE ADDRESS 0xED 0xDD PUSH21 0xCB589C83F2EED289434664DD895AD715C6A6FF148F PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "400:1290:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:1290:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1489:198;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1489:198:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;527:23:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;527:23:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;527:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;557:46:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;593:123:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;593:123:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1314:130:0;;;:::i;:::-;;1149:234:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1149:234:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1149:234:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1149:234:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1149:234:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1149:234:2;;;;;;;;;;;;;;;:::i;:::-;;664:72:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;962:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1608:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1608:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1489:198:3;1555:13;1597;;;;;;;;;;;:22;;;1620:8;1597:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1597:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1597:32:3;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1597:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1575:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:45;1652:9;1663:8;1636:45;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1489:198;;;:::o;527:23:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;557:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;593:123:3:-;855:9:0;:7;:9::i;:::-;847:18;;;;;;701:8:3;670:13;;:40;;;;;;;;;;;;;;;;;;593:123;:::o;1314:130:0:-;855:9;:7;:9::i;:::-;847:18;;;;;;1409:1;1372:40;;1393:6;;;;;;;;;;;1372:40;;;;;;;;;;;;1436:1;1419:6;;:19;;;;;;;;;;;;;;;;;;1314:130::o;1149:234:2:-;1252:1;1220:16;:28;1237:10;1220:28;;;;;;;;;;;;;;;;:33;1212:42;;;;;;1261:12;1276:25;1295:5;1276:18;:25::i;:::-;1261:40;;1338:3;1328:7;:13;;;;;;1318:7;:23;1308:33;;1348:29;1362:5;1369:7;1348:13;:29::i;:::-;1149:234;;:::o;664:72:0:-;701:7;724:6;;;;;;;;;;;717:13;;664:72;:::o;962:85::-;1001:4;1035:6;;;;;;;;;;;1021:20;;:10;:20;;;1014:27;;962:85;:::o;1608:103::-;855:9;:7;:9::i;:::-;847:18;;;;;;1677:28;1696:8;1677:18;:28::i;:::-;1608:103;:::o;971:512:3:-;1074:9;548:13;:24;562:9;548:24;;;;;;;;;;;;;;;;;;;;;534:38;;:10;:38;;;526:47;;;;;;1092:23;1118:7;1126:9;1118:18;;;;;;;;;;;;;;;;;;1092:44;;1151:18;1160:8;1151;:18::i;:::-;1143:27;;;;;;1203:10;;1190;:23;;;;;;1177:36;;1220:11;1264:1;1250:10;1235:8;:12;;;:25;1234:31;;;;;;1220:45;;1327:25;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1327:25:3;;;1317:36;;;;;;1303:8;1286:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1286:26:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1286:26:3;;;1276:37;;;;;;:77;1272:135;;;1397:2;1391:3;1382:6;:12;;;;;;1373:6;:21;:26;1364:35;;1272:135;1413:31;;;;;;;;;;;;;;;;;;1437:6;1413:13;:31::i;:::-;1451:26;1468:8;1451:16;:26::i;:::-;580:1;;971:512;;;;:::o;972:171:2:-;1042:4;1055:9;1099:4;1082:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1082:22:2;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1082:22:2;;;1072:33;;;;;;1067:39;;1055:51;;1127:10;;1120:4;:17;;;;;;1113:24;;;972:171;;;:::o;657:309::-;728:7;811:1;738:7;751:56;;;;;;;;758:5;751:56;;;;765:4;751:56;;;;771:1;751:56;;;;;;787:12;;781:3;:18;751:56;;;;;;802:1;751:56;;;;;;805:1;751:56;;;;;738:70;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;738:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:74;728:84;;839:10;819:13;:17;833:2;819:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;887:35;920:1;887:16;:28;904:10;887:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;856:16;:28;873:10;856:28;;;;;;;;;;;;;;;:66;;;;934:26;944:2;948:5;955:4;934:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;934:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:309;;;:::o;1848:173:0:-;1938:1;1918:22;;:8;:22;;;;1910:31;;;;;;1982:8;1953:38;;1974:6;;;;;;;;;;;1953:38;;;;;;;;;;;;2007:8;1998:6;;:17;;;;;;;;;;;;;;;;;;1848:173;:::o;846:119:3:-;911:4;955:3;934:7;:17;;;;;;;;;;;;:24;;;;926:33;;846:119;;;:::o;722:118::-;821:12;;815:3;:18;788:7;:17;;;:46;;;;;;;;;;;;;;;;;;722:118;:::o;1054:133:1:-;1112:7;1128:9;1144:1;1140;:5;1128:17;;1164:1;1159;:6;;1152:14;;;;1180:1;1173:8;;;1054:133;;;;:::o;400:1290:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "844200",
								"executionCost": "84981",
								"totalCost": "929181"
							},
							"external": {
								"createRandomZombie(string)": "infinite",
								"feedOnKitty(uint256,uint256)": "infinite",
								"isOwner()": "1144",
								"owner()": "1105",
								"renounceOwnership()": "24297",
								"setKittyContractAddress(address)": "22073",
								"transferOwnership(address)": "24542",
								"zombieToOwner(uint256)": "1245",
								"zombies(uint256)": "infinite"
							},
							"internal": {
								"_isReady(struct ZombieFactory.Zombie storage pointer)": "934",
								"_triggerCooldown(struct ZombieFactory.Zombie storage pointer)": "21739",
								"feedAndMultiply(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 400,
									"end": 1690,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "MSTORE"
								},
								{
									"begin": 303,
									"end": 305,
									"name": "PUSH",
									"value": "10"
								},
								{
									"begin": 286,
									"end": 305,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 286,
									"end": 305,
									"name": "SSTORE"
								},
								{
									"begin": 334,
									"end": 343,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 334,
									"end": 343,
									"name": "SLOAD"
								},
								{
									"begin": 328,
									"end": 330,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 328,
									"end": 343,
									"name": "EXP"
								},
								{
									"begin": 310,
									"end": 343,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 310,
									"end": 343,
									"name": "SSTORE"
								},
								{
									"begin": 368,
									"end": 374,
									"name": "PUSH",
									"value": "15180"
								},
								{
									"begin": 348,
									"end": 374,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 348,
									"end": 374,
									"name": "SSTORE"
								},
								{
									"begin": 538,
									"end": 548,
									"name": "CALLER"
								},
								{
									"begin": 529,
									"end": 535,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 529,
									"end": 535,
									"name": "DUP1"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "EXP"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "DUP2"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "SLOAD"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "DUP2"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "MUL"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "NOT"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "AND"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "SWAP1"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "DUP4"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "AND"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "MUL"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "OR"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "SWAP1"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "SSTORE"
								},
								{
									"begin": 529,
									"end": 548,
									"name": "POP"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SWAP1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SLOAD"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SWAP1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "EXP"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "SWAP1"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DIV"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "AND"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "AND"
								},
								{
									"begin": 589,
									"end": 590,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "AND"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "MLOAD"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "MLOAD"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "DUP1"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "SWAP2"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "SUB"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "SWAP1"
								},
								{
									"begin": 560,
									"end": 600,
									"name": "LOG3"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "DUP1"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "CODECOPY"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 400,
									"end": 1690,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820ad25080d39b73630eddd74cb589c83f2eed289434664dd895ad715c6a6ff148f64736f6c63430005110032",
									".code": [
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "MSTORE"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "LT"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SHR"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "GT"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "7BFF0A01"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "17A7F4CC"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "2052465E"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "528B7B8F"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "5F4623F1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "REVERT"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "JUMPDEST"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "DUP2"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "ADD"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "ADD"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP3"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP2"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "ADD"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP3"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP2"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "JUMPDEST"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "STOP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP8"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP7"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP6"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP5"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP9"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "NOT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP8"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "RETURN"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "ADD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "ADD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP3"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MLOAD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP3"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MSTORE"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "ADD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MLOAD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SUB"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "RETURN"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "ADD"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "AND"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "ADD"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "SWAP3"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "SWAP2"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "STOP"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "STOP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP3"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DIV"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "MUL"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "MLOAD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "MSTORE"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP4"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP3"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "MSTORE"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "ADD"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP4"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP3"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP3"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "STOP"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "DUP3"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SUB"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "RETURN"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "MLOAD"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "DUP3"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "DUP2"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "MSTORE"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "ADD"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SWAP2"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "POP"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "POP"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "MLOAD"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SWAP2"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SUB"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SWAP1"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "RETURN"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "DUP2"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "AND"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP3"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP2"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "STOP"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "JUMPDEST"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "SLOAD"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "EXP"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "DIV"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1597,
											"end": 1610,
											"name": "AND"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "AND"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"value": "E98B7F4D"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "DUP4"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "AND"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SHL"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MSTORE"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MSTORE"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "140"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP4"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SUB"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP7"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "GAS"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "STATICCALL"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "MLOAD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "ADD"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP4"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP5"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP6"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP7"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP8"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP9"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP4"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP5"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP6"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP7"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP8"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP4"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP5"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP6"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP7"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP4"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP5"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP6"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP4"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP5"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP4"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP3"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "SWAP2"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1575,
											"end": 1629,
											"name": "POP"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1652,
											"end": 1661,
											"name": "DUP4"
										},
										{
											"begin": 1663,
											"end": 1671,
											"name": "DUP3"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "MLOAD"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "DUP1"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "ADD"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "MSTORE"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "DUP1"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "DUP2"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "MSTORE"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "ADD"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "PUSH",
											"value": "6B69747479000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "DUP2"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "MSTORE"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "POP"
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1636,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 1687,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "LT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "INVALID"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "KECCAK256"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "LT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MUL"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "KECCAK256"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "GT"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EXP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP7"
										},
										{
											"begin": 527,
											"end": 550,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MSTORE"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "MSTORE"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "KECCAK256"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "POP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SLOAD"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "EXP"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DIV"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 603,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "JUMPDEST"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 855,
											"end": 862,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMPDEST"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPI"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "DUP1"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "REVERT"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPDEST"
										},
										{
											"begin": 701,
											"end": 709,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 683,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 670,
											"end": 683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "EXP"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "DUP2"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "SLOAD"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "DUP2"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "MUL"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "NOT"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "AND"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "DUP4"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "AND"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "MUL"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "OR"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "SSTORE"
										},
										{
											"begin": 670,
											"end": 710,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 716,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 855,
											"end": 862,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMPDEST"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPI"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "DUP1"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "REVERT"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPDEST"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SLOAD"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "EXP"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DIV"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "AND"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "AND"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "MLOAD"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "MLOAD"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "DUP1"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "SWAP2"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "SUB"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "SWAP1"
										},
										{
											"begin": 1372,
											"end": 1412,
											"name": "LOG3"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "DUP1"
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "EXP"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "DUP2"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "SLOAD"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "DUP2"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "MUL"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "NOT"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "AND"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "SWAP1"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "DUP4"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "AND"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "MUL"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "OR"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "SWAP1"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "SSTORE"
										},
										{
											"begin": 1419,
											"end": 1438,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1444,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMPDEST"
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1236,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1247,
											"name": "CALLER"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "KECCAK256"
										},
										{
											"begin": 1220,
											"end": 1248,
											"name": "SLOAD"
										},
										{
											"begin": 1220,
											"end": 1253,
											"name": "EQ"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "JUMPI"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "REVERT"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1212,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "DUP3"
										},
										{
											"begin": 1276,
											"end": 1294,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1276,
											"end": 1301,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1301,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1301,
											"name": "POP"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "DUP2"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "JUMPI"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "INVALID"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "JUMPDEST"
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "MOD"
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SUB"
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "SWAP1"
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "POP"
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP3"
										},
										{
											"begin": 1369,
											"end": 1376,
											"name": "DUP3"
										},
										{
											"begin": 1348,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1149,
											"end": 1383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMPDEST"
										},
										{
											"begin": 701,
											"end": 708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "DUP1"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "SWAP1"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "SLOAD"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "SWAP1"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "EXP"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "SWAP1"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "DIV"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "AND"
										},
										{
											"begin": 717,
											"end": 730,
											"name": "SWAP1"
										},
										{
											"begin": 717,
											"end": 730,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "SWAP1"
										},
										{
											"begin": 664,
											"end": 736,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "SLOAD"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "EXP"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "DIV"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "CALLER"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1041,
											"name": "EQ"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "POP"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "SWAP1"
										},
										{
											"begin": 962,
											"end": 1047,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMPDEST"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 855,
											"end": 862,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "JUMPDEST"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPI"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "DUP1"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "REVERT"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPDEST"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1696,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1677,
											"end": 1695,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1711,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 971,
											"end": 1483,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 971,
											"end": 1483,
											"name": "JUMPDEST"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "DUP3"
										},
										{
											"begin": 548,
											"end": 561,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 562,
											"end": 571,
											"name": "DUP3"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "DUP2"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "MSTORE"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "ADD"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "DUP2"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "MSTORE"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "ADD"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "KECCAK256"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "SLOAD"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "EXP"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "DIV"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 572,
											"name": "AND"
										},
										{
											"begin": 534,
											"end": 572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 534,
											"end": 572,
											"name": "AND"
										},
										{
											"begin": 534,
											"end": 544,
											"name": "CALLER"
										},
										{
											"begin": 534,
											"end": 572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 534,
											"end": 572,
											"name": "AND"
										},
										{
											"begin": 534,
											"end": 572,
											"name": "EQ"
										},
										{
											"begin": 526,
											"end": 573,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 526,
											"end": 573,
											"name": "JUMPI"
										},
										{
											"begin": 526,
											"end": 573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 526,
											"end": 573,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 573,
											"name": "REVERT"
										},
										{
											"begin": 526,
											"end": 573,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 526,
											"end": 573,
											"name": "JUMPDEST"
										},
										{
											"begin": 1092,
											"end": 1115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "DUP6"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "SLOAD"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "DUP2"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "LT"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "JUMPI"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "INVALID"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "JUMPDEST"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "MSTORE"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "KECCAK256"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "SWAP1"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "MUL"
										},
										{
											"begin": 1118,
											"end": 1136,
											"name": "ADD"
										},
										{
											"begin": 1092,
											"end": 1136,
											"name": "SWAP1"
										},
										{
											"begin": 1092,
											"end": 1136,
											"name": "POP"
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "DUP2"
										},
										{
											"begin": 1151,
											"end": 1159,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "JUMPDEST"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "JUMPI"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "REVERT"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1143,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 1203,
											"end": 1213,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1203,
											"end": 1213,
											"name": "SLOAD"
										},
										{
											"begin": 1190,
											"end": 1200,
											"name": "DUP5"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "DUP2"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "JUMPI"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "INVALID"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "MOD"
										},
										{
											"begin": 1177,
											"end": 1213,
											"name": "SWAP4"
										},
										{
											"begin": 1177,
											"end": 1213,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1250,
											"end": 1260,
											"name": "DUP6"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1235,
											"end": 1247,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1235,
											"end": 1247,
											"name": "ADD"
										},
										{
											"begin": 1235,
											"end": 1247,
											"name": "SLOAD"
										},
										{
											"begin": 1235,
											"end": 1260,
											"name": "ADD"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "DUP2"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "JUMPI"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "INVALID"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "JUMPDEST"
										},
										{
											"begin": 1234,
											"end": 1265,
											"name": "DIV"
										},
										{
											"begin": 1220,
											"end": 1265,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "MLOAD"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "ADD"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "DUP1"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "DUP1"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "PUSH",
											"value": "6B69747479000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "DUP2"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "MSTORE"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "POP"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "ADD"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "SWAP1"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "POP"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "SWAP1"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1327,
											"end": 1352,
											"name": "MSTORE"
										},
										{
											"begin": 1317,
											"end": 1353,
											"name": "DUP1"
										},
										{
											"begin": 1317,
											"end": 1353,
											"name": "MLOAD"
										},
										{
											"begin": 1317,
											"end": 1353,
											"name": "SWAP1"
										},
										{
											"begin": 1317,
											"end": 1353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1353,
											"name": "ADD"
										},
										{
											"begin": 1317,
											"end": 1353,
											"name": "KECCAK256"
										},
										{
											"begin": 1303,
											"end": 1311,
											"name": "DUP5"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "MLOAD"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "ADD"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP3"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "MLOAD"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "ADD"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP4"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "ADD"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP2"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "MSTORE"
										},
										{
											"begin": 1276,
											"end": 1313,
											"name": "DUP1"
										},
										{
											"begin": 1276,
											"end": 1313,
											"name": "MLOAD"
										},
										{
											"begin": 1276,
											"end": 1313,
											"name": "SWAP1"
										},
										{
											"begin": 1276,
											"end": 1313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1313,
											"name": "ADD"
										},
										{
											"begin": 1276,
											"end": 1313,
											"name": "KECCAK256"
										},
										{
											"begin": 1276,
											"end": 1353,
											"name": "EQ"
										},
										{
											"begin": 1272,
											"end": 1407,
											"name": "ISZERO"
										},
										{
											"begin": 1272,
											"end": 1407,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 1272,
											"end": 1407,
											"name": "JUMPI"
										},
										{
											"begin": 1397,
											"end": 1399,
											"name": "PUSH",
											"value": "63"
										},
										{
											"begin": 1391,
											"end": 1394,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "DUP3"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "DUP2"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "JUMPI"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "INVALID"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "JUMPDEST"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "MOD"
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "DUP3"
										},
										{
											"begin": 1373,
											"end": 1394,
											"name": "SUB"
										},
										{
											"begin": 1373,
											"end": 1399,
											"name": "ADD"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "POP"
										},
										{
											"begin": 1272,
											"end": 1407,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 1272,
											"end": 1407,
											"name": "JUMPDEST"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "ADD"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "MSTORE"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "DUP2"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "MSTORE"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "ADD"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "PUSH",
											"value": "4E6F4E616D650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "DUP2"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "MSTORE"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "POP"
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP3"
										},
										{
											"begin": 1413,
											"end": 1426,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 1413,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1451,
											"end": 1477,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "DUP3"
										},
										{
											"begin": 1451,
											"end": 1467,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 1451,
											"end": 1477,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1477,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 1451,
											"end": 1477,
											"name": "JUMPDEST"
										},
										{
											"begin": 580,
											"end": 581,
											"name": "POP"
										},
										{
											"begin": 580,
											"end": 581,
											"name": "POP"
										},
										{
											"begin": 971,
											"end": 1483,
											"name": "POP"
										},
										{
											"begin": 971,
											"end": 1483,
											"name": "POP"
										},
										{
											"begin": 971,
											"end": 1483,
											"name": "POP"
										},
										{
											"begin": 971,
											"end": 1483,
											"name": "POP"
										},
										{
											"begin": 971,
											"end": 1483,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "JUMPDEST"
										},
										{
											"begin": 1042,
											"end": 1046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "DUP3"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "MLOAD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP3"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "MLOAD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP4"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP2"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "MSTORE"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "DUP1"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "MLOAD"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "SWAP1"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "ADD"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "KECCAK256"
										},
										{
											"begin": 1067,
											"end": 1106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1106,
											"name": "SHR"
										},
										{
											"begin": 1055,
											"end": 1106,
											"name": "SWAP1"
										},
										{
											"begin": 1055,
											"end": 1106,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "SLOAD"
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "JUMPI"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "INVALID"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1137,
											"name": "MOD"
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "SWAP2"
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "SWAP2"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "SWAP1"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "POP"
										},
										{
											"begin": 972,
											"end": 1143,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 728,
											"end": 735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 738,
											"end": 745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MLOAD"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 763,
											"name": "DUP7"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 769,
											"name": "DUP6"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 771,
											"end": 772,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "SLOAD"
										},
										{
											"begin": 781,
											"end": 784,
											"name": "TIMESTAMP"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SUB"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "KECCAK256"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 812,
											"name": "SUB"
										},
										{
											"begin": 728,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 728,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "CALLER"
										},
										{
											"begin": 819,
											"end": 832,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 833,
											"end": 835,
											"name": "DUP4"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "MSTORE"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "KECCAK256"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "EXP"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "NOT"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "OR"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SSTORE"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 920,
											"end": 921,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 887,
											"end": 903,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 904,
											"end": 914,
											"name": "CALLER"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "AND"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "AND"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DUP2"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "MSTORE"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "ADD"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SWAP1"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "DUP2"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "MSTORE"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "ADD"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "KECCAK256"
										},
										{
											"begin": 887,
											"end": 915,
											"name": "SLOAD"
										},
										{
											"begin": 887,
											"end": 919,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 887,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "SWAP2"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "AND"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 887,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 856,
											"end": 872,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 873,
											"end": 883,
											"name": "CALLER"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "MSTORE"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "MSTORE"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "ADD"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 884,
											"name": "KECCAK256"
										},
										{
											"begin": 856,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 922,
											"name": "SSTORE"
										},
										{
											"begin": 856,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7"
										},
										{
											"begin": 944,
											"end": 946,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 953,
											"name": "DUP5"
										},
										{
											"begin": 955,
											"end": 959,
											"name": "DUP5"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP5"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP5"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "EXP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "NOT"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP5"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 960,
											"name": "LOG1"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 2021,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1848,
											"end": 2021,
											"name": "JUMPDEST"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "DUP2"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "EQ"
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "ISZERO"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "JUMPI"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "DUP1"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "REVERT"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 1910,
											"end": 1941,
											"name": "JUMPDEST"
										},
										{
											"begin": 1982,
											"end": 1990,
											"name": "DUP1"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "AND"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP1"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "SLOAD"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "EXP"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DIV"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "AND"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "AND"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "MLOAD"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "MLOAD"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "DUP1"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "SWAP2"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "SUB"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "SWAP1"
										},
										{
											"begin": 1953,
											"end": 1991,
											"name": "LOG3"
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP1"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP1"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "EXP"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP2"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SLOAD"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP2"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "MUL"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "NOT"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "AND"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "DUP4"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "AND"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "MUL"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "OR"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "SSTORE"
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1848,
											"end": 2021,
											"name": "POP"
										},
										{
											"begin": 1848,
											"end": 2021,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 846,
											"end": 965,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 846,
											"end": 965,
											"name": "JUMPDEST"
										},
										{
											"begin": 911,
											"end": 915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 955,
											"end": 958,
											"name": "TIMESTAMP"
										},
										{
											"begin": 934,
											"end": 941,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "EXP"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "DIV"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 934,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "GT"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 846,
											"end": 965,
											"name": "SWAP2"
										},
										{
											"begin": 846,
											"end": 965,
											"name": "SWAP1"
										},
										{
											"begin": 846,
											"end": 965,
											"name": "POP"
										},
										{
											"begin": 846,
											"end": 965,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 722,
											"end": 840,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 722,
											"end": 840,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 833,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 821,
											"end": 833,
											"name": "SLOAD"
										},
										{
											"begin": 815,
											"end": 818,
											"name": "TIMESTAMP"
										},
										{
											"begin": 815,
											"end": 833,
											"name": "ADD"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP2"
										},
										{
											"begin": 788,
											"end": 805,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 788,
											"end": 805,
											"name": "ADD"
										},
										{
											"begin": 788,
											"end": 805,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "EXP"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "DUP2"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "SLOAD"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "DUP2"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "MUL"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "NOT"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "DUP4"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "AND"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "MUL"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "OR"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "SSTORE"
										},
										{
											"begin": 788,
											"end": 834,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 840,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 840,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "JUMPDEST"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1144,
											"end": 1145,
											"name": "DUP3"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "DUP5"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "ADD"
										},
										{
											"begin": 1128,
											"end": 1145,
											"name": "SWAP1"
										},
										{
											"begin": 1128,
											"end": 1145,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "DUP4"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "DUP2"
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "LT"
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "ISZERO"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "JUMPI"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "INVALID"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 1152,
											"end": 1166,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1173,
											"end": 1181,
											"name": "SWAP2"
										},
										{
											"begin": 1173,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1173,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "SWAP3"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1187,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SLOAD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "AND"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ISZERO"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "MUL"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SUB"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "AND"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DIV"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "MSTORE"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "KECCAK256"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DIV"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "LT"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "MLOAD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "NOT"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "AND"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP4"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "OR"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP6"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SSTORE"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP6"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SSTORE"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ISZERO"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "GT"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ISZERO"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "MLOAD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SSTORE"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "GT"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ISZERO"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "DUP2"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SSTORE"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMP"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 1690,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"createRandomZombie(string)": "7bff0a01",
							"feedOnKitty(uint256,uint256)": "17a7f4cc",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setKittyContractAddress(address)": "5f4623f1",
							"transferOwnership(address)": "f2fde38b",
							"zombieToOwner(uint256)": "528b7b8f",
							"zombies(uint256)": "2052465e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/zombiefeeding.sol\":\"ZombieFeeding\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable.sol\":{\"keccak256\":\"0x33f9862afb90391d02eed330569a92bc9143dd1cb5d6661d737bcedb22f24c68\",\"urls\":[\"bzz-raw://e8f11612996616032f44968b1850c1e71a94a368094141a23f229f2c1a260990\",\"dweb:/ipfs/QmXaxow6LX1FHFKXvMHbKrSn12csP81Fegmbu8HvhUd6MB\"]},\"contracts/safemath.sol\":{\"keccak256\":\"0x550edc31dffbfc4cc03a0782be2a00d21fb46c4c7701e7ad94119b2958df3141\",\"urls\":[\"bzz-raw://c83e2808dc5f0270c500b3d6778501864e2aa6ea544d945f5261a17ac332c1bb\",\"dweb:/ipfs/QmaPhmn7YRdF9pvmbGUr2sg9mvWMkxpid4fZDb66hNdvGm\"]},\"contracts/zombiefactory.sol\":{\"keccak256\":\"0xf07b2e29651df0fd29244e46f2c151c0279859bed6e21b7f4e083c2a39cf650b\",\"urls\":[\"bzz-raw://a14ebca476117f7de7f3d9fa001070963f24e3ab210badd848944f7d3820f7b4\",\"dweb:/ipfs/Qmc8hgkepQMVnwa2ukidYdzbPZiEFzK1sfYp9mCspTKP5Y\"]},\"contracts/zombiefeeding.sol\":{\"keccak256\":\"0x820b49ddee171a492dd5635cca200e45ec003fcb1486f9cabf2afab407daf613\",\"urls\":[\"bzz-raw://109785f322dfc562af1830fc0b0c39eebf3aa5183343938758b6d30695d3892e\",\"dweb:/ipfs/Qmen1LadtnAdfutgD93c7e2Sa76xQgacsSCBMV1yeEF4ys\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 424,
								"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
								"label": "dnaDigits",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 429,
								"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
								"label": "dnaModulus",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 432,
								"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
								"label": "cooldownTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 448,
								"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
								"label": "zombies",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(Zombie)445_storage)dyn_storage"
							},
							{
								"astId": 452,
								"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
								"label": "zombieToOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 456,
								"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
								"label": "ownerZombieCount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 601,
								"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
								"label": "kittyContract",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(KittyInterface)597"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Zombie)445_storage)dyn_storage": {
								"base": "t_struct(Zombie)445_storage",
								"encoding": "dynamic_array",
								"label": "struct ZombieFactory.Zombie[]",
								"numberOfBytes": "32"
							},
							"t_contract(KittyInterface)597": {
								"encoding": "inplace",
								"label": "contract KittyInterface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Zombie)445_storage": {
								"encoding": "inplace",
								"label": "struct ZombieFactory.Zombie",
								"members": [
									{
										"astId": 434,
										"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 436,
										"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
										"label": "dna",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 438,
										"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
										"label": "level",
										"offset": 0,
										"slot": "2",
										"type": "t_uint32"
									},
									{
										"astId": 440,
										"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
										"label": "readyTime",
										"offset": 4,
										"slot": "2",
										"type": "t_uint32"
									},
									{
										"astId": 442,
										"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
										"label": "winCount",
										"offset": 8,
										"slot": "2",
										"type": "t_uint16"
									},
									{
										"astId": 444,
										"contract": "contracts/zombiefeeding.sol:ZombieFeeding",
										"label": "lossCount",
										"offset": 10,
										"slot": "2",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			}
		},
		"sources": {
			"contracts/ownable.sol": {
				"ast": {
					"absolutePath": "contracts/ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							108
						]
					},
					"id": 109,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "248:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "310:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "346:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "303:72:0"
									},
									"src": "277:99:0"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "522:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 12,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "529:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "538:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "538:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "529:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "529:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "589:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "581:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "581:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 21,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "560:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "EmitStatement",
												"src": "555:45:0"
											}
										]
									},
									"documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:0"
									},
									"scope": 108,
									"src": "499:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "710:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 30,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "724:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 29,
												"id": 31,
												"nodeType": "Return",
												"src": "717:13:0"
											}
										]
									},
									"documentation": "@return the address of the owner.",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "700:9:0"
									},
									"scope": 108,
									"src": "664:72:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "840:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 36,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "855:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "855:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															779,
															780
														],
														"referencedDeclaration": 779,
														"src": "847:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "847:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "847:18:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "872:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 42,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:2:0"
									},
									"src": "819:60:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1007:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 47,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "1021:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1021:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 49,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1035:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1021:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 51,
												"nodeType": "Return",
												"src": "1014:27:0"
											}
										]
									},
									"documentation": "@return true if `msg.sender` is the owner of the contract.",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1001:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1000:6:0"
									},
									"scope": 108,
									"src": "962:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1360:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 59,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1393:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1409:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1401:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1401:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 58,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1372:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1372:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "EmitStatement",
												"src": "1367:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1419:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1436:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1428:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1419:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1419:19:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 56,
											"modifierName": {
												"argumentTypes": null,
												"id": 55,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "1350:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1350:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:0:0"
									},
									"scope": 108,
									"src": "1314:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1670:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 80,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1696:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 79,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1677:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1677:28:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 77,
											"modifierName": {
												"argumentTypes": null,
												"id": 76,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "1660:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1660:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1635:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1634:18:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:0:0"
									},
									"scope": 108,
									"src": "1608:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1903:118:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 90,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "1918:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1938:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1930:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1930:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1918:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															779,
															780
														],
														"referencedDeclaration": 779,
														"src": "1910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1910:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1910:31:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 98,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1974:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1982:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1953:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1953:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "1948:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1998:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2007:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1998:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1998:17:0"
											}
										]
									},
									"documentation": "@dev Transfers control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1876:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1875:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:0:0"
									},
									"scope": 108,
									"src": "1848:173:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 109,
							"src": "226:1798:0"
						}
					],
					"src": "0:2026:0"
				},
				"id": 0
			},
			"contracts/safemath.sol": {
				"ast": {
					"absolutePath": "contracts/safemath.sol",
					"exportedSymbols": {
						"SafeMath": [
							206
						],
						"SafeMath16": [
							398
						],
						"SafeMath32": [
							302
						]
					},
					"id": 399,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 110,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "287:113:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 119,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "298:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "303:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 125,
												"nodeType": "IfStatement",
												"src": "294:37:1",
												"trueBody": {
													"id": 124,
													"nodeType": "Block",
													"src": "306:25:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "322:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 118,
															"id": 123,
															"nodeType": "Return",
															"src": "315:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 142,
														"src": "337:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "337:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 128,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "349:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "353:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "349:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "337:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 133,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "368:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 134,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "372:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "368:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 136,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "377:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "368:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 132,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "361:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "361:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "361:18:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 140,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "393:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 118,
												"id": 141,
												"nodeType": "Return",
												"src": "386:8:1"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "233:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "244:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "232:22:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "278:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "277:9:1"
									},
									"scope": 206,
									"src": "220:180:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "554:203:1",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 160,
														"src": "636:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 154,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "648:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "652:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "648:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "636:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 158,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "750:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 151,
												"id": 159,
												"nodeType": "Return",
												"src": "743:8:1"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "500:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "511:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "499:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "545:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "544:9:1"
									},
									"scope": 206,
									"src": "487:270:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "941:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 171,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "955:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "960:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "955:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 170,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "948:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "948:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "948:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 176,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "976:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 177,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "980:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "976:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 179,
												"nodeType": "Return",
												"src": "969:12:1"
											}
										]
									},
									"documentation": "@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "887:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "898:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "886:22:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "932:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "931:9:1"
									},
									"scope": 206,
									"src": "874:113:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1121:66:1",
										"statements": [
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "1128:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1128:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 192,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1140:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "1144:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1140:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1128:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 197,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "1159:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 198,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1164:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1159:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 196,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1152:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1152:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1152:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 202,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 191,
													"src": "1180:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 203,
												"nodeType": "Return",
												"src": "1173:8:1"
											}
										]
									},
									"documentation": "@dev Adds two numbers, throws on overflow.",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1067:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1078:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:22:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1112:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1111:9:1"
									},
									"scope": 206,
									"src": "1054:133:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 399,
							"src": "129:1061:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath32\n@dev SafeMath library implemented for uint32",
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "SafeMath32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1365:112:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1376:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1381:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1376:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 221,
												"nodeType": "IfStatement",
												"src": "1372:37:1",
												"trueBody": {
													"id": 220,
													"nodeType": "Block",
													"src": "1384:25:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1400:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 214,
															"id": 219,
															"nodeType": "Return",
															"src": "1393:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "1415:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 222,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1415:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 224,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1426:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 225,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "1430:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1426:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1415:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 229,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "1445:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 230,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "1449:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "1445:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 232,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "1454:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1445:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 228,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1438:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1438:18:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 236,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "1470:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 214,
												"id": 237,
												"nodeType": "Return",
												"src": "1463:8:1"
											}
										]
									},
									"documentation": null,
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1314:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 207,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1314:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1324:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 209,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1324:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1313:20:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1357:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 212,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1357:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1356:8:1"
									},
									"scope": 302,
									"src": "1301:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "1547:202:1",
										"statements": [
											{
												"assignments": [
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "1629:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 248,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1629:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 250,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1640:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1644:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1640:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1629:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 254,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 249,
													"src": "1742:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 247,
												"id": 255,
												"nodeType": "Return",
												"src": "1735:8:1"
											}
										]
									},
									"documentation": null,
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1496:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 240,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1506:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 242,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1506:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1495:20:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1539:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 245,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1539:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1538:8:1"
									},
									"scope": 302,
									"src": "1483:266:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1819:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "1833:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 268,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "1838:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1833:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 266,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1826:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "1826:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1854:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 273,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1858:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1854:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 265,
												"id": 275,
												"nodeType": "Return",
												"src": "1847:12:1"
											}
										]
									},
									"documentation": null,
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1768:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 258,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1768:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1778:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 260,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1778:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1767:20:1"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1811:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 263,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1811:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1810:8:1"
									},
									"scope": 302,
									"src": "1755:110:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "1935:65:1",
										"statements": [
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "1942:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 286,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1942:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 288,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "1953:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 289,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "1957:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1953:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1942:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 293,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "1972:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 294,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "1977:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1972:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 292,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1965:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1965:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "1965:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 298,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "1993:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 285,
												"id": 299,
												"nodeType": "Return",
												"src": "1986:8:1"
											}
										]
									},
									"documentation": null,
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1884:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 278,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1884:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1894:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 280,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1894:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1883:20:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1927:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 283,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1927:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1926:8:1"
									},
									"scope": 302,
									"src": "1871:129:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 399,
							"src": "1275:728:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath16\n@dev SafeMath library implemented for uint16",
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "SafeMath16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2178:112:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 311,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2189:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2194:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2189:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 317,
												"nodeType": "IfStatement",
												"src": "2185:37:1",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "2197:25:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2213:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 310,
															"id": 315,
															"nodeType": "Return",
															"src": "2206:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "2228:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 318,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2239:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2243:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2239:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2228:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 325,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "2258:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 326,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "2262:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "2258:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 328,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "2267:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2258:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 324,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "2251:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "2251:18:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2283:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 310,
												"id": 333,
												"nodeType": "Return",
												"src": "2276:8:1"
											}
										]
									},
									"documentation": null,
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2127:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 303,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2127:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2137:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 305,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2126:20:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2170:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 308,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2170:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2169:8:1"
									},
									"scope": 398,
									"src": "2114:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2360:202:1",
										"statements": [
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "2442:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 344,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2442:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 346,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2453:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 347,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2457:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2453:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2442:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 350,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 345,
													"src": "2555:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 343,
												"id": 351,
												"nodeType": "Return",
												"src": "2548:8:1"
											}
										]
									},
									"documentation": null,
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2309:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 336,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2309:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2319:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 338,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2319:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2308:20:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2352:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 341,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2352:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2351:8:1"
									},
									"scope": 398,
									"src": "2296:266:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2632:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 363,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "2646:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 364,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "2651:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2646:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 362,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "2639:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2639:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 368,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "2667:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 369,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "2671:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2667:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 361,
												"id": 371,
												"nodeType": "Return",
												"src": "2660:12:1"
											}
										]
									},
									"documentation": null,
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2581:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 354,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2581:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2591:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 356,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2591:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2580:20:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2624:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 359,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2624:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2623:8:1"
									},
									"scope": 398,
									"src": "2568:110:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "2748:65:1",
										"statements": [
											{
												"assignments": [
													383
												],
												"declarations": [
													{
														"constant": false,
														"id": 383,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "2755:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 382,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2755:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 387,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 384,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 385,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "2770:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2766:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 389,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2785:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 390,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "2785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 388,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "2778:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2778:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "2778:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 394,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 383,
													"src": "2806:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 381,
												"id": 395,
												"nodeType": "Return",
												"src": "2799:8:1"
											}
										]
									},
									"documentation": null,
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2697:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 374,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2697:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2707:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 376,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2707:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2696:20:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2740:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 379,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2740:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2739:8:1"
									},
									"scope": 398,
									"src": "2684:129:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 399,
							"src": "2088:728:1"
						}
					],
					"src": "0:2818:1"
				},
				"id": 1
			},
			"contracts/zombiefactory.sol": {
				"ast": {
					"absolutePath": "contracts/zombiefactory.sol",
					"exportedSymbols": {
						"ZombieFactory": [
							568
						]
					},
					"id": 569,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:2"
						},
						{
							"absolutePath": "contracts/ownable.sol",
							"file": "./ownable.sol",
							"id": 401,
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 109,
							"src": "35:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/safemath.sol",
							"file": "./safemath.sol",
							"id": 402,
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 399,
							"src": "60:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 403,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 108,
										"src": "114:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$108",
											"typeString": "contract Ownable"
										}
									},
									"id": 404,
									"nodeType": "InheritanceSpecifier",
									"src": "114:7:2"
								}
							],
							"contractDependencies": [
								108
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568,
								108
							],
							"name": "ZombieFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 407,
									"libraryName": {
										"contractScope": null,
										"id": 405,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 206,
										"src": "135:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$206",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "129:27:2",
									"typeName": {
										"id": 406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 410,
									"libraryName": {
										"contractScope": null,
										"id": 408,
										"name": "SafeMath32",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 302,
										"src": "166:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath32_$302",
											"typeString": "library SafeMath32"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "160:28:2",
									"typeName": {
										"id": 409,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "181:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									}
								},
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath16",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 398,
										"src": "198:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath16_$398",
											"typeString": "library SafeMath16"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "192:28:2",
									"typeName": {
										"id": 412,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "213:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 421,
									"name": "NewZombie",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"indexed": false,
												"name": "zombieId",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "242:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "242:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "257:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "257:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"name": "dna",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "270:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "270:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "241:38:2"
									},
									"src": "226:54:2"
								},
								{
									"constant": false,
									"id": 424,
									"name": "dnaDigits",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "286:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "286:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3136",
										"id": 423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "303:2:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 429,
									"name": "dnaModulus",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "310:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 425,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "310:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 428,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 426,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "328:2:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"id": 427,
											"name": "dnaDigits",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 424,
											"src": "334:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "328:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 432,
									"name": "cooldownTime",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "348:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 430,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "348:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "368:6:2",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "ZombieFactory.Zombie",
									"id": 445,
									"members": [
										{
											"constant": false,
											"id": 434,
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 445,
											"src": "402:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 433,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "402:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 436,
											"name": "dna",
											"nodeType": "VariableDeclaration",
											"scope": 445,
											"src": "420:8:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 435,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "420:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 438,
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 445,
											"src": "435:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 437,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "435:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 440,
											"name": "readyTime",
											"nodeType": "VariableDeclaration",
											"scope": 445,
											"src": "454:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 439,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "454:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 442,
											"name": "winCount",
											"nodeType": "VariableDeclaration",
											"scope": 445,
											"src": "477:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 441,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "477:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 444,
											"name": "lossCount",
											"nodeType": "VariableDeclaration",
											"scope": 445,
											"src": "499:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 443,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "499:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Zombie",
									"nodeType": "StructDefinition",
									"scope": 568,
									"src": "381:140:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 448,
									"name": "zombies",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "527:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Zombie_$445_storage_$dyn_storage",
										"typeString": "struct ZombieFactory.Zombie[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 446,
											"name": "Zombie",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 445,
											"src": "527:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
												"typeString": "struct ZombieFactory.Zombie"
											}
										},
										"id": 447,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "527:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Zombie_$445_storage_$dyn_storage_ptr",
											"typeString": "struct ZombieFactory.Zombie[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 452,
									"name": "zombieToOwner",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "557:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 451,
										"keyType": {
											"id": 449,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "566:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "557:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 450,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "574:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 456,
									"name": "ownerZombieCount",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "608:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 455,
										"keyType": {
											"id": 453,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "617:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "608:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 454,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "628:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "721:245:2",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"name": "id",
														"nodeType": "VariableDeclaration",
														"scope": 509,
														"src": "728:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "728:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 468,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "758:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 469,
																		"name": "_dna",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "765:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "771:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 472,
																					"name": "now",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 778,
																					"src": "781:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 473,
																					"name": "cooldownTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "787:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "781:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "774:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": "uint32"
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "774:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "802:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "805:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 467,
																	"name": "Zombie",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "751:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Zombie_$445_storage_ptr_$",
																		"typeString": "type(struct ZombieFactory.Zombie storage pointer)"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "751:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Zombie_$445_memory",
																	"typeString": "struct ZombieFactory.Zombie memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Zombie_$445_memory",
																	"typeString": "struct ZombieFactory.Zombie memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "zombies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "738:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Zombie_$445_storage_$dyn_storage",
																	"typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "738:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Zombie_$445_storage_$returns$_t_uint256_$",
																"typeString": "function (struct ZombieFactory.Zombie storage ref) returns (uint256)"
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "738:70:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "811:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "738:74:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "728:84:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 483,
															"name": "zombieToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "819:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 485,
														"indexExpression": {
															"argumentTypes": null,
															"id": 484,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "833:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "819:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 486,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "839:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "839:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "819:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "819:30:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 490,
															"name": "ownerZombieCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "856:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 493,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "873:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "873:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "856:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "920:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 494,
																	"name": "ownerZombieCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "887:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 497,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 495,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "904:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "904:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "887:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 205,
															"src": "887:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "887:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "856:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "856:66:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 504,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "944:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 505,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "948:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 506,
															"name": "_dna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "955:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "NewZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "934:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "EmitStatement",
												"src": "929:31:2"
											}
										]
									},
									"documentation": null,
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createZombie",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "680:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "680:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"name": "_dna",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "701:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "701:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "679:32:2"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:0:2"
									},
									"scope": 568,
									"src": "657:309:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1048:95:2",
										"statements": [
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"name": "rand",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "1055:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 517,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 523,
																			"name": "_str",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 512,
																			"src": "1099:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 521,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 763,
																			"src": "1082:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1082:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1082:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 520,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1072:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1072:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1067:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint"
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1067:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1055:51:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 528,
														"name": "rand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "1120:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 529,
														"name": "dnaModulus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "1127:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1120:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 516,
												"id": 531,
												"nodeType": "Return",
												"src": "1113:24:2"
											}
										]
									},
									"documentation": null,
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateRandomDna",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"name": "_str",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1000:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1000:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "999:20:2"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1041:6:2"
									},
									"scope": 568,
									"src": "972:171:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1205:178:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 539,
																	"name": "ownerZombieCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "1220:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 542,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 540,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "1237:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1237:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1220:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1252:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1220:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															779,
															780
														],
														"referencedDeclaration": 779,
														"src": "1212:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1212:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "1212:42:2"
											},
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"name": "randDna",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "1261:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 547,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 550,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "1295:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 549,
														"name": "_generateRandomDna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "1276:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) view returns (uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1276:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1261:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 553,
														"name": "randDna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1308:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 554,
															"name": "randDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "1318:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 555,
																"name": "randDna",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "1328:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1338:3:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1328:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1318:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1308:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1308:33:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 562,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "1362:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 563,
															"name": "randDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "1369:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "_createZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "1348:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1348:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1348:29:2"
											}
										]
									},
									"documentation": null,
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createRandomZombie",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1177:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 534,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1177:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1176:21:2"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:0:2"
									},
									"scope": 568,
									"src": "1149:234:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 569,
							"src": "88:1300:2"
						}
					],
					"src": "0:1390:2"
				},
				"id": 2
			},
			"contracts/zombiefeeding.sol": {
				"ast": {
					"absolutePath": "contracts/zombiefeeding.sol",
					"exportedSymbols": {
						"KittyInterface": [
							597
						],
						"ZombieFeeding": [
							761
						]
					},
					"id": 762,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 570,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:3"
						},
						{
							"absolutePath": "contracts/zombiefactory.sol",
							"file": "./zombiefactory.sol",
							"id": 571,
							"nodeType": "ImportDirective",
							"scope": 762,
							"sourceUnit": 569,
							"src": "35:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 597,
							"linearizedBaseContracts": [
								597
							],
							"name": "KittyInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKitty",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "115:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "114:13:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "isGestating",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "157:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "157:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "isReady",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "180:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "180:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "cooldownIndex",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "199:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"name": "nextActionAt",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "227:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"name": "siringWithId",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "254:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"name": "birthTime",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "281:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"name": "matronId",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "305:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"name": "sireId",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "328:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"name": "generation",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "349:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"name": "genes",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "374:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "150:242:3"
									},
									"scope": 597,
									"src": "97:296:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 762,
							"src": "68:328:3"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 598,
										"name": "ZombieFactory",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 568,
										"src": "426:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ZombieFactory_$568",
											"typeString": "contract ZombieFactory"
										}
									},
									"id": 599,
									"nodeType": "InheritanceSpecifier",
									"src": "426:13:3"
								}
							],
							"contractDependencies": [
								108,
								568
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 761,
							"linearizedBaseContracts": [
								761,
								568,
								108
							],
							"name": "ZombieFeeding",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 601,
									"name": "kittyContract",
									"nodeType": "VariableDeclaration",
									"scope": 761,
									"src": "447:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_KittyInterface_$597",
										"typeString": "contract KittyInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 600,
										"name": "KittyInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 597,
										"src": "447:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_KittyInterface_$597",
											"typeString": "contract KittyInterface"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "519:68:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 606,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "534:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "534:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 608,
																	"name": "zombieToOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "548:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 610,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 609,
																	"name": "_zombieId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "562:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "548:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "534:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															779,
															780
														],
														"referencedDeclaration": 779,
														"src": "526:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "526:47:3"
											},
											{
												"id": 614,
												"nodeType": "PlaceholderStatement",
												"src": "580:1:3"
											}
										]
									},
									"documentation": null,
									"id": 616,
									"name": "onlyOwnerOf",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"name": "_zombieId",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "503:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "502:16:3"
									},
									"src": "482:105:3",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "663:53:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 623,
														"name": "kittyContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "670:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_KittyInterface_$597",
															"typeString": "contract KittyInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 625,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "701:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 624,
															"name": "KittyInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "686:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_KittyInterface_$597_$",
																"typeString": "type(contract KittyInterface)"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "686:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_KittyInterface_$597",
															"typeString": "contract KittyInterface"
														}
													},
													"src": "670:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_KittyInterface_$597",
														"typeString": "contract KittyInterface"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "670:40:3"
											}
										]
									},
									"documentation": null,
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 621,
											"modifierName": {
												"argumentTypes": null,
												"id": 620,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "653:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "653:9:3"
										}
									],
									"name": "setKittyContractAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "626:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "625:18:3"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:0:3"
									},
									"scope": 761,
									"src": "593:123:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "781:59:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 635,
															"name": "_zombie",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "788:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
																"typeString": "struct ZombieFactory.Zombie storage pointer"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "readyTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "788:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 639,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "815:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 640,
																	"name": "cooldownTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "821:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "815:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "808:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": "uint32"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "808:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "788:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "788:46:3"
											}
										]
									},
									"documentation": null,
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_triggerCooldown",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"name": "_zombie",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "748:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
													"typeString": "struct ZombieFactory.Zombie"
												},
												"typeName": {
													"contractScope": null,
													"id": 631,
													"name": "Zombie",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 445,
													"src": "748:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
														"typeString": "struct ZombieFactory.Zombie"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "747:24:3"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:0:3"
									},
									"scope": 761,
									"src": "722:118:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "917:48:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 653,
																	"name": "_zombie",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "934:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
																		"typeString": "struct ZombieFactory.Zombie storage pointer"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "readyTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 440,
																"src": "934:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 655,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "955:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "934:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 657,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "933:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 652,
												"id": 658,
												"nodeType": "Return",
												"src": "926:33:3"
											}
										]
									},
									"documentation": null,
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isReady",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "_zombie",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "864:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
													"typeString": "struct ZombieFactory.Zombie"
												},
												"typeName": {
													"contractScope": null,
													"id": 647,
													"name": "Zombie",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 445,
													"src": "864:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
														"typeString": "struct ZombieFactory.Zombie"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "863:24:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "911:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "911:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:6:3"
									},
									"scope": 761,
									"src": "846:119:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "1085:398:3",
										"statements": [
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"name": "myZombie",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "1092:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
															"typeString": "struct ZombieFactory.Zombie"
														},
														"typeName": {
															"contractScope": null,
															"id": 672,
															"name": "Zombie",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 445,
															"src": "1092:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
																"typeString": "struct ZombieFactory.Zombie"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 674,
														"name": "zombies",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "1118:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Zombie_$445_storage_$dyn_storage",
															"typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
														}
													},
													"id": 676,
													"indexExpression": {
														"argumentTypes": null,
														"id": 675,
														"name": "_zombieId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1126:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1118:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Zombie_$445_storage",
														"typeString": "struct ZombieFactory.Zombie storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1092:44:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 680,
																	"name": "myZombie",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "1160:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
																		"typeString": "struct ZombieFactory.Zombie storage pointer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
																		"typeString": "struct ZombieFactory.Zombie storage pointer"
																	}
																],
																"id": 679,
																"name": "_isReady",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "1151:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Zombie_$445_storage_ptr_$returns$_t_bool_$",
																	"typeString": "function (struct ZombieFactory.Zombie storage pointer) view returns (bool)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1151:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															779,
															780
														],
														"referencedDeclaration": 779,
														"src": "1143:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1143:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "1143:27:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 684,
														"name": "_targetDna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "1177:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 685,
															"name": "_targetDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "1190:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"id": 686,
															"name": "dnaModulus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1203:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1190:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1177:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "1177:36:3"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"name": "newDna",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "1220:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 690,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1220:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 692,
																		"name": "myZombie",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "1235:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
																			"typeString": "struct ZombieFactory.Zombie storage pointer"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "dna",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 436,
																	"src": "1235:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 694,
																	"name": "_targetDna",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "1250:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1235:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 696,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1234:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1264:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1234:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1220:45:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 703,
																		"name": "_species",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "1303:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 701,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "1286:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1286:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1286:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 700,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "1276:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1276:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6b69747479",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1344:7:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8d53323b21b9f304546f6d3e61cde865451064d614aa4912f395b755a9d8cad9",
																			"typeString": "literal_string \"kitty\""
																		},
																		"value": "kitty"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_8d53323b21b9f304546f6d3e61cde865451064d614aa4912f395b755a9d8cad9",
																			"typeString": "literal_string \"kitty\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 707,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "1327:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1327:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1327:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 706,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "1317:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1317:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1276:77:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 724,
												"nodeType": "IfStatement",
												"src": "1272:135:3",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "1355:52:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 713,
																	"name": "newDna",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "1364:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 714,
																			"name": "newDna",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "1373:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 715,
																				"name": "newDna",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 691,
																				"src": "1382:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313030",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1391:3:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "1382:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1373:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3939",
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1397:2:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_99_by_1",
																			"typeString": "int_const 99"
																		},
																		"value": "99"
																	},
																	"src": "1373:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1364:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 722,
															"nodeType": "ExpressionStatement",
															"src": "1364:35:3"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "4e6f4e616d65",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1427:8:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0aeb8da9f74598c2e4a71ce60a50afb61c4d6634980349338a64c5e84606a0bd",
																"typeString": "literal_string \"NoName\""
															},
															"value": "NoName"
														},
														{
															"argumentTypes": null,
															"id": 727,
															"name": "newDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "1437:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0aeb8da9f74598c2e4a71ce60a50afb61c4d6634980349338a64c5e84606a0bd",
																"typeString": "literal_string \"NoName\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "_createZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "1413:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "1413:31:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 731,
															"name": "myZombie",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "1468:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
																"typeString": "struct ZombieFactory.Zombie storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Zombie_$445_storage_ptr",
																"typeString": "struct ZombieFactory.Zombie storage pointer"
															}
														],
														"id": 730,
														"name": "_triggerCooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "1451:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$445_storage_ptr_$returns$__$",
															"typeString": "function (struct ZombieFactory.Zombie storage pointer)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1451:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "1451:26:3"
											}
										]
									},
									"documentation": null,
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 669,
													"name": "_zombieId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 662,
													"src": "1074:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 670,
											"modifierName": {
												"argumentTypes": null,
												"id": 668,
												"name": "onlyOwnerOf",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 616,
												"src": "1062:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1062:22:3"
										}
									],
									"name": "feedAndMultiply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"name": "_zombieId",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "996:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"name": "_targetDna",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1012:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"name": "_species",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1029:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 665,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1029:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "995:57:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1085:0:3"
									},
									"scope": 761,
									"src": "971:512:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "1548:139:3",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"name": "kittyDna",
														"nodeType": "VariableDeclaration",
														"scope": 759,
														"src": "1555:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1555:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1555:13:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															null,
															null,
															null,
															null,
															null,
															null,
															null,
															null,
															null,
															{
																"argumentTypes": null,
																"id": 745,
																"name": "kittyDna",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "1585:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 746,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1575:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$__$__$__$__$__$__$__$__$_t_uint256_$",
															"typeString": "tuple(,,,,,,,,,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 749,
																"name": "_kittyId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "1620:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 747,
																"name": "kittyContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "1597:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_KittyInterface_$597",
																	"typeString": "contract KittyInterface"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getKitty",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 596,
															"src": "1597:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256) view external returns (bool,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1597:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bool,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"src": "1575:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "1575:54:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 754,
															"name": "_zombieId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "1652:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 755,
															"name": "kittyDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "1663:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6b69747479",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1673:7:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d53323b21b9f304546f6d3e61cde865451064d614aa4912f395b755a9d8cad9",
																"typeString": "literal_string \"kitty\""
															},
															"value": "kitty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d53323b21b9f304546f6d3e61cde865451064d614aa4912f395b755a9d8cad9",
																"typeString": "literal_string \"kitty\""
															}
														],
														"id": 753,
														"name": "feedAndMultiply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "1636:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1636:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "1636:45:3"
											}
										]
									},
									"documentation": null,
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "feedOnKitty",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"name": "_zombieId",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1510:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"name": "_kittyId",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1526:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1526:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1509:31:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1548:0:3"
									},
									"scope": 761,
									"src": "1489:198:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 762,
							"src": "400:1290:3"
						}
					],
					"src": "0:1692:3"
				},
				"id": 3
			}
		}
	}
}